(()=>{"use strict";var n={208:(n,r,e)=>{e.d(r,{A:()=>A});var t=e(354),o=e.n(t),a=e(314),i=e.n(a)()(o());i.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Jost:ital,wght@0,100..900;1,100..900&display=swap);"]),i.push([n.id,'html{\n    font-family: Jost, sans-serif;\n}\n\n:root.dark {\n    --border: 1px solid whitesmoke;\n    --bg: rgb(0, 0, 0);\n    --bg2: rgb(29, 29, 29);\n    --bg3: rgb(39, 39, 39);\n    --text: white;\n    --lightgray: #f0eef1;\n    --green: rgb(105, 247, 105);\n    --red: rgb(255, 118, 118);\n    --navy: rgb(21, 101, 192);\n    --blue: rgb(33, 150, 243);\n    --navyToBlue: linear-gradient(to right, var(--navy), var(--blue));\n    --shadow: 0px 2px 2px lightgray;\n    --gray: rgb(94, 94, 94);\n    --font: \'Jost\', sans-serif;\n}\n:root {\n    --border: 1px solid black;\n    --bg: rgb(255, 255, 255);\n    --bg2: rgb(250, 250, 250);\n    --bg3: rgb(245, 245, 245);\n    --text: black;\n    --lightgray: #f0eef1;\n    --green: rgb(105, 247, 105);\n    --red: rgb(255, 118, 118);\n    --navy: rgb(21, 101, 192);\n    --blue: rgb(33, 150, 243);\n    --navyToBlue: linear-gradient(to right, var(--navy), var(--blue));\n    --shadow: 0px 2px 2px lightgray;\n    --gray: rgb(94, 94, 94);\n    --font: \'Jost\', sans-serif;\n}\nbody{\n    font-family: var(--font);\n    background-color: var(--bg);\n    color: var(--text);\n    display: flex;\n    flex-direction: column;\n    min-height: 100vh;\n}\n#root{\n    display: flex;\n    flex-direction: column;\n    min-height: 100vh;\n}\n/*CSS RESET*/\n*,\n*::before,\n*::after{\n    box-sizing: border-box;\n    padding: 0;\n    margin: 0;\n}\n\n/*CSS FORM RESET*/\ninput, textarea, select, button, meter, progress{\n    margin: 0;\n    padding: 0;\n    border: none;\n    outline: none; \n    box-sizing: border-box; \n    background-color: transparent;\n    font-family: inherit; \n}\nbutton, input[type="submit"], input[type="button"] {\n    cursor: pointer;\n    background-color: transparent;\n}\ninput[type="checkbox"], input[type="radio"] {\n    vertical-align: middle;\n}\nselect {\n    appearance: none;\n    background-image: none;\n}\ntextarea {\n    resize: vertical;\n}\n\nlabel, form, button, input{\n    display: block;\n}\n\ninput::-webkit-outer-spin-button,\ninput::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n    margin: 0;\n}\ninput[type=number]{\n    appearance: textfield;\n    -moz-appearance: textfield;\n}\n\n.tt{\n    cursor: pointer;\n    font-size: 1.5rem;\n    position: absolute;\n    right: 20px;\n}\n\nheader{\n    padding: 10px;\n    font-family: var(--font);\n    border-bottom: var(--border);\n    background-color: var(--bg2);\n    font-size: 2rem;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}\n.header{\n    font-weight: 700;\n    text-decoration: none;\n    color: inherit;\n}\nheader img{\n    width: 80px;\n}\n\n.status{\n    text-align: center;\n    padding: 70px;\n    font-size: 1.5rem;\n}\n\nmain{\n    flex: 1;\n    padding: 30px;\n    display: flex;\n    justify-content: center;\n    gap: 100px;\n    flex-wrap: wrap;\n}\n\n.boardContainer{\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 15px;\n    font-size: 1.5rem;\n}\n\n/* .fogOfWar{\n    width: 20px;\n    writing-mode: vertical-lr;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 70%;\n    padding: 25px;\n    font-size: 1.5rem;\n    background-color: var(--bg3);\n    border-radius: 15px;\n    border: var(--border);\n} */\n\n.board{\n    display: grid;\n    grid-template-columns: repeat(9, 50px);\n}\n\n.board div{\n    width: 50px;\n    height: 50px;\n    border: var(--border)\n}\n\n.boardContainer.computer .board div:hover{\n    box-shadow: inset 0 0 100px 100px rgba(103, 114, 209, 0.402);\n    cursor: crosshair;\n}\n\nfooter{\n    text-align: center;\n    padding: 10px;\n    font-size: 1.2rem;\n    border-top: var(--border);\n    background-color: var(--bg2);\n}\n\n.missed{\n    background-color: orange;\n}\n\n.hit{\n    background-color: crimson;\n}\n\n.ship{\n    background-color: var(--gray);\n}',"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAEA;IACI,6BAA6B;AACjC;;AAEA;IACI,8BAA8B;IAC9B,kBAAkB;IAClB,sBAAsB;IACtB,sBAAsB;IACtB,aAAa;IACb,oBAAoB;IACpB,2BAA2B;IAC3B,yBAAyB;IACzB,yBAAyB;IACzB,yBAAyB;IACzB,iEAAiE;IACjE,+BAA+B;IAC/B,uBAAuB;IACvB,0BAA0B;AAC9B;AACA;IACI,yBAAyB;IACzB,wBAAwB;IACxB,yBAAyB;IACzB,yBAAyB;IACzB,aAAa;IACb,oBAAoB;IACpB,2BAA2B;IAC3B,yBAAyB;IACzB,yBAAyB;IACzB,yBAAyB;IACzB,iEAAiE;IACjE,+BAA+B;IAC/B,uBAAuB;IACvB,0BAA0B;AAC9B;AACA;IACI,wBAAwB;IACxB,2BAA2B;IAC3B,kBAAkB;IAClB,aAAa;IACb,sBAAsB;IACtB,iBAAiB;AACrB;AACA;IACI,aAAa;IACb,sBAAsB;IACtB,iBAAiB;AACrB;AACA,YAAY;AACZ;;;IAGI,sBAAsB;IACtB,UAAU;IACV,SAAS;AACb;;AAEA,iBAAiB;AACjB;IACI,SAAS;IACT,UAAU;IACV,YAAY;IACZ,aAAa;IACb,sBAAsB;IACtB,6BAA6B;IAC7B,oBAAoB;AACxB;AACA;IACI,eAAe;IACf,6BAA6B;AACjC;AACA;IACI,sBAAsB;AAC1B;AACA;IACI,gBAAgB;IAChB,sBAAsB;AAC1B;AACA;IACI,gBAAgB;AACpB;;AAEA;IACI,cAAc;AAClB;;AAEA;;IAEI,wBAAwB;IACxB,SAAS;AACb;AACA;IACI,qBAAqB;IACrB,0BAA0B;AAC9B;;AAEA;IACI,eAAe;IACf,iBAAiB;IACjB,kBAAkB;IAClB,WAAW;AACf;;AAEA;IACI,aAAa;IACb,wBAAwB;IACxB,4BAA4B;IAC5B,4BAA4B;IAC5B,eAAe;IACf,aAAa;IACb,mBAAmB;IACnB,uBAAuB;AAC3B;AACA;IACI,gBAAgB;IAChB,qBAAqB;IACrB,cAAc;AAClB;AACA;IACI,WAAW;AACf;;AAEA;IACI,kBAAkB;IAClB,aAAa;IACb,iBAAiB;AACrB;;AAEA;IACI,OAAO;IACP,aAAa;IACb,aAAa;IACb,uBAAuB;IACvB,UAAU;IACV,eAAe;AACnB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,SAAS;IACT,iBAAiB;AACrB;;AAEA;;;;;;;;;;;;GAYG;;AAEH;IACI,aAAa;IACb,sCAAsC;AAC1C;;AAEA;IACI,WAAW;IACX,YAAY;IACZ;AACJ;;AAEA;IACI,4DAA4D;IAC5D,iBAAiB;AACrB;;AAEA;IACI,kBAAkB;IAClB,aAAa;IACb,iBAAiB;IACjB,yBAAyB;IACzB,4BAA4B;AAChC;;AAEA;IACI,wBAAwB;AAC5B;;AAEA;IACI,yBAAyB;AAC7B;;AAEA;IACI,6BAA6B;AACjC",sourcesContent:['@import url(\'https://fonts.googleapis.com/css2?family=Jost:ital,wght@0,100..900;1,100..900&display=swap\');\r\n\r\nhtml{\r\n    font-family: Jost, sans-serif;\r\n}\r\n\r\n:root.dark {\r\n    --border: 1px solid whitesmoke;\r\n    --bg: rgb(0, 0, 0);\r\n    --bg2: rgb(29, 29, 29);\r\n    --bg3: rgb(39, 39, 39);\r\n    --text: white;\r\n    --lightgray: #f0eef1;\r\n    --green: rgb(105, 247, 105);\r\n    --red: rgb(255, 118, 118);\r\n    --navy: rgb(21, 101, 192);\r\n    --blue: rgb(33, 150, 243);\r\n    --navyToBlue: linear-gradient(to right, var(--navy), var(--blue));\r\n    --shadow: 0px 2px 2px lightgray;\r\n    --gray: rgb(94, 94, 94);\r\n    --font: \'Jost\', sans-serif;\r\n}\r\n:root {\r\n    --border: 1px solid black;\r\n    --bg: rgb(255, 255, 255);\r\n    --bg2: rgb(250, 250, 250);\r\n    --bg3: rgb(245, 245, 245);\r\n    --text: black;\r\n    --lightgray: #f0eef1;\r\n    --green: rgb(105, 247, 105);\r\n    --red: rgb(255, 118, 118);\r\n    --navy: rgb(21, 101, 192);\r\n    --blue: rgb(33, 150, 243);\r\n    --navyToBlue: linear-gradient(to right, var(--navy), var(--blue));\r\n    --shadow: 0px 2px 2px lightgray;\r\n    --gray: rgb(94, 94, 94);\r\n    --font: \'Jost\', sans-serif;\r\n}\r\nbody{\r\n    font-family: var(--font);\r\n    background-color: var(--bg);\r\n    color: var(--text);\r\n    display: flex;\r\n    flex-direction: column;\r\n    min-height: 100vh;\r\n}\r\n#root{\r\n    display: flex;\r\n    flex-direction: column;\r\n    min-height: 100vh;\r\n}\r\n/*CSS RESET*/\r\n*,\r\n*::before,\r\n*::after{\r\n    box-sizing: border-box;\r\n    padding: 0;\r\n    margin: 0;\r\n}\r\n\r\n/*CSS FORM RESET*/\r\ninput, textarea, select, button, meter, progress{\r\n    margin: 0;\r\n    padding: 0;\r\n    border: none;\r\n    outline: none; \r\n    box-sizing: border-box; \r\n    background-color: transparent;\r\n    font-family: inherit; \r\n}\r\nbutton, input[type="submit"], input[type="button"] {\r\n    cursor: pointer;\r\n    background-color: transparent;\r\n}\r\ninput[type="checkbox"], input[type="radio"] {\r\n    vertical-align: middle;\r\n}\r\nselect {\r\n    appearance: none;\r\n    background-image: none;\r\n}\r\ntextarea {\r\n    resize: vertical;\r\n}\r\n\r\nlabel, form, button, input{\r\n    display: block;\r\n}\r\n\r\ninput::-webkit-outer-spin-button,\r\ninput::-webkit-inner-spin-button {\r\n    -webkit-appearance: none;\r\n    margin: 0;\r\n}\r\ninput[type=number]{\r\n    appearance: textfield;\r\n    -moz-appearance: textfield;\r\n}\r\n\r\n.tt{\r\n    cursor: pointer;\r\n    font-size: 1.5rem;\r\n    position: absolute;\r\n    right: 20px;\r\n}\r\n\r\nheader{\r\n    padding: 10px;\r\n    font-family: var(--font);\r\n    border-bottom: var(--border);\r\n    background-color: var(--bg2);\r\n    font-size: 2rem;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n}\r\n.header{\r\n    font-weight: 700;\r\n    text-decoration: none;\r\n    color: inherit;\r\n}\r\nheader img{\r\n    width: 80px;\r\n}\r\n\r\n.status{\r\n    text-align: center;\r\n    padding: 70px;\r\n    font-size: 1.5rem;\r\n}\r\n\r\nmain{\r\n    flex: 1;\r\n    padding: 30px;\r\n    display: flex;\r\n    justify-content: center;\r\n    gap: 100px;\r\n    flex-wrap: wrap;\r\n}\r\n\r\n.boardContainer{\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    gap: 15px;\r\n    font-size: 1.5rem;\r\n}\r\n\r\n/* .fogOfWar{\r\n    width: 20px;\r\n    writing-mode: vertical-lr;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    height: 70%;\r\n    padding: 25px;\r\n    font-size: 1.5rem;\r\n    background-color: var(--bg3);\r\n    border-radius: 15px;\r\n    border: var(--border);\r\n} */\r\n\r\n.board{\r\n    display: grid;\r\n    grid-template-columns: repeat(9, 50px);\r\n}\r\n\r\n.board div{\r\n    width: 50px;\r\n    height: 50px;\r\n    border: var(--border)\r\n}\r\n\r\n.boardContainer.computer .board div:hover{\r\n    box-shadow: inset 0 0 100px 100px rgba(103, 114, 209, 0.402);\r\n    cursor: crosshair;\r\n}\r\n\r\nfooter{\r\n    text-align: center;\r\n    padding: 10px;\r\n    font-size: 1.2rem;\r\n    border-top: var(--border);\r\n    background-color: var(--bg2);\r\n}\r\n\r\n.missed{\r\n    background-color: orange;\r\n}\r\n\r\n.hit{\r\n    background-color: crimson;\r\n}\r\n\r\n.ship{\r\n    background-color: var(--gray);\r\n}'],sourceRoot:""}]);const A=i},314:n=>{n.exports=function(n){var r=[];return r.toString=function(){return this.map((function(r){var e="",t=void 0!==r[5];return r[4]&&(e+="@supports (".concat(r[4],") {")),r[2]&&(e+="@media ".concat(r[2]," {")),t&&(e+="@layer".concat(r[5].length>0?" ".concat(r[5]):""," {")),e+=n(r),t&&(e+="}"),r[2]&&(e+="}"),r[4]&&(e+="}"),e})).join("")},r.i=function(n,e,t,o,a){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(t)for(var A=0;A<this.length;A++){var s=this[A][0];null!=s&&(i[s]=!0)}for(var c=0;c<n.length;c++){var d=[].concat(n[c]);t&&i[d[0]]||(void 0!==a&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=a),e&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=e):d[2]=e),o&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=o):d[4]="".concat(o)),r.push(d))}},r}},354:n=>{n.exports=function(n){var r=n[1],e=n[3];if(!e)return r;if("function"==typeof btoa){var t=btoa(unescape(encodeURIComponent(JSON.stringify(e)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(t),a="/*# ".concat(o," */");return[r].concat([a]).join("\n")}return[r].join("\n")}},72:n=>{var r=[];function e(n){for(var e=-1,t=0;t<r.length;t++)if(r[t].identifier===n){e=t;break}return e}function t(n,t){for(var a={},i=[],A=0;A<n.length;A++){var s=n[A],c=t.base?s[0]+t.base:s[0],d=a[c]||0,l="".concat(c," ").concat(d);a[c]=d+1;var p=e(l),u={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==p)r[p].references++,r[p].updater(u);else{var b=o(u,t);t.byIndex=A,r.splice(A,0,{identifier:l,updater:b,references:1})}i.push(l)}return i}function o(n,r){var e=r.domAPI(r);return e.update(n),function(r){if(r){if(r.css===n.css&&r.media===n.media&&r.sourceMap===n.sourceMap&&r.supports===n.supports&&r.layer===n.layer)return;e.update(n=r)}else e.remove()}}n.exports=function(n,o){var a=t(n=n||[],o=o||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var A=e(a[i]);r[A].references--}for(var s=t(n,o),c=0;c<a.length;c++){var d=e(a[c]);0===r[d].references&&(r[d].updater(),r.splice(d,1))}a=s}}},659:n=>{var r={};n.exports=function(n,e){var t=function(n){if(void 0===r[n]){var e=document.querySelector(n);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(n){e=null}r[n]=e}return r[n]}(n);if(!t)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");t.appendChild(e)}},540:n=>{n.exports=function(n){var r=document.createElement("style");return n.setAttributes(r,n.attributes),n.insert(r,n.options),r}},56:(n,r,e)=>{n.exports=function(n){var r=e.nc;r&&n.setAttribute("nonce",r)}},825:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var r=n.insertStyleElement(n);return{update:function(e){!function(n,r,e){var t="";e.supports&&(t+="@supports (".concat(e.supports,") {")),e.media&&(t+="@media ".concat(e.media," {"));var o=void 0!==e.layer;o&&(t+="@layer".concat(e.layer.length>0?" ".concat(e.layer):""," {")),t+=e.css,o&&(t+="}"),e.media&&(t+="}"),e.supports&&(t+="}");var a=e.sourceMap;a&&"undefined"!=typeof btoa&&(t+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),r.styleTagTransform(t,n,r.options)}(r,n,e)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(r)}}}},113:n=>{n.exports=function(n,r){if(r.styleSheet)r.styleSheet.cssText=n;else{for(;r.firstChild;)r.removeChild(r.firstChild);r.appendChild(document.createTextNode(n))}}}},r={};function e(t){var o=r[t];if(void 0!==o)return o.exports;var a=r[t]={id:t,exports:{}};return n[t](a,a.exports,e),a.exports}e.n=n=>{var r=n&&n.__esModule?()=>n.default:()=>n;return e.d(r,{a:r}),r},e.d=(n,r)=>{for(var t in r)e.o(r,t)&&!e.o(n,t)&&Object.defineProperty(n,t,{enumerable:!0,get:r[t]})},e.o=(n,r)=>Object.prototype.hasOwnProperty.call(n,r),e.nc=void 0,(()=>{var n=e(72),r=e.n(n),t=e(825),o=e.n(t),a=e(659),i=e.n(a),A=e(56),s=e.n(A),c=e(540),d=e.n(c),l=e(113),p=e.n(l),u=e(208),b={};function f(n){let r=0,e=!1;return{length:n,hit:function(){if(r++,r===n)return e=!0,!0},isSunk:function(){return e}}}function g(){let n=Array(9).fill().map((()=>Array(9).fill(0)));return{board:n,placeShip:function(r,e,t,o){if(r=parseInt(r),e=parseInt(e),t=parseInt(t),r>9||e>9||r<0||e<0)return!1;if("vertical"===o){if(e+t>9)return!1}else if("horizontal"===o&&r+t>9)return!1;if(0!=n[r][e])return!1;if("vertical"===o){for(let o=0;o<=t-1;o++)if(0!=n[r+o][e])return!1}else if("horizontal"===o)for(let o=0;o<=t-1;o++)if(0!=n[r][e+o])return!1;if(n[r][e]="ship","vertical"===o)for(let o=0;o<=t-1;o++)n[r+o][e]="ship";else if("horizontal"===o)for(let o=0;o<=t-1;o++)n[r][e+o]="ship";return!0},receiveAttack:function(r,e){if("missed"!==n[r][e]&&"hit"!==n[r][e])return"ship"===n[r][e]?(n[r][e]="hit","hit"):(n[r][e]="missed","missed")},allShipSunk:function(){let r=!0;for(let e=0;e<9;e++)n[e].includes("ship")&&(r=!1);return r}}}b.styleTagTransform=p(),b.setAttributes=s(),b.insert=i().bind(null,"head"),b.domAPI=o(),b.insertStyleElement=d(),r()(u.A,b),u.A&&u.A.locals&&u.A.locals;const B=function(){const n=document.documentElement,r=n.querySelector(".tt");return function(){"dark"===n.className?n.removeAttribute("class"):n.className="dark","☀️"==r.textContent?r.textContent="🌙":r.textContent="☀️"}}();document.querySelector(".tt").addEventListener("click",B);const C=document.querySelector("header"),m=document.querySelector("main");m.textContent="";const h=document.createElement("div");h.classList.add("status"),h.textContent="Place your carier! (Size is 5)",C.parentNode.insertBefore(h,m);const y=f(5),I=f(4),v=f(3),x=f(2),k=f(1);[].push(y,I,v,x,k),[].push(y,I,v,x,k);const w=document.createElement("div");w.classList.add("boardContainer","player"),w.textContent="PLAYER";const E=document.createElement("div");E.classList.add("boardContainer","computer"),E.textContent="COMPUTER";const S=g();S.placeShip(6,6,3,"horizontal");const z=document.createElement("div");z.classList.add("board"),S.board.forEach(((n,r)=>{n.forEach(((n,e)=>{const t=document.createElement("div");t.setAttribute("x",r),t.setAttribute("y",e),"ship"===n&&t.classList.add("ship"),z.appendChild(t)}))}));const j=g();j.placeShip(5,5,3,"vertical");const T=document.createElement("div");function L(n){const r=j.receiveAttack(n.target.attributes.x.value,n.target.attributes.y.value);"hit"!==r&&"missed"!==r||("hit"===r&&n.target.classList.add("hit"),"missed"===r&&n.target.classList.add("missed"),!0===j.allShipSunk()?(console.log("Player wins"),R("Player")):M())}function M(){const n=Math.floor(9*Math.random())+0,r=Math.floor(9*Math.random())+0,e=S.receiveAttack(n,r);if("hit"===e||"missed"===e)return"hit"===e&&document.querySelector(`div[x="${n}"][y="${r}"]`).classList.add("hit"),"missed"===e&&document.querySelector(`div[x="${n}"][y="${r}"]`).classList.add("missed"),!0===S.allShipSunk()&&(console.log("Computer wins"),R("Computer")),e;M()}function R(n){m.textContent=`${n} wins!`,h.textContent="",m.style.fontSize="3rem"}T.classList.add("board"),j.board.forEach(((n,r)=>{n.forEach(((n,e)=>{const t=document.createElement("div");t.setAttribute("x",r),t.setAttribute("y",e),t.addEventListener("click",L),T.appendChild(t)}))})),w.appendChild(z),E.appendChild(T),m.appendChild(w),m.appendChild(E)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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U2pCLFVBQVVDLElBQUksU0FDdkJlLEVBQWN4QyxNQUFNb0MsU0FBUSxDQUFDdkosRUFBS00sS0FDOUJOLEVBQUt1SixTQUFRLENBQUNDLEVBQUtDLEtBQ2YsTUFBTUMsRUFBTTlGLFNBQVNXLGNBQWMsT0FDbkNtRixFQUFJOUUsYUFBYSxJQUFJdEUsR0FDckJvSixFQUFJOUUsYUFBYSxJQUFJNkUsR0FFckJDLEVBQUlsQixpQkFBaUIsUUFBU3FCLEdBQzlCRCxFQUFTdkYsWUFBWXFGLEVBQUcsR0FDM0IsSUEwQ0xQLEVBQXFCOUUsWUFBWWlGLEdBQ2pDRixFQUF1Qi9FLFlBQVl1RixHQUNuQ2xCLEVBQUtyRSxZQUFZOEUsR0FFakJULEVBQUtyRSxZQUFZK0UsRSIsInNvdXJjZXMiOlsid2VicGFjazovL2JhdHRsZXNoaXAvLi9zcmMvc3R5bGUuY3NzIiwid2VicGFjazovL2JhdHRsZXNoaXAvLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzIiwid2VicGFjazovL2JhdHRsZXNoaXAvLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qcyIsIndlYnBhY2s6Ly9iYXR0bGVzaGlwLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzIiwid2VicGFjazovL2JhdHRsZXNoaXAvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzIiwid2VicGFjazovL2JhdHRsZXNoaXAvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanMiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qcyIsIndlYnBhY2s6Ly9iYXR0bGVzaGlwLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanMiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzIiwid2VicGFjazovL2JhdHRsZXNoaXAvd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC93ZWJwYWNrL3J1bnRpbWUvY29tcGF0IGdldCBkZWZhdWx0IGV4cG9ydCIsIndlYnBhY2s6Ly9iYXR0bGVzaGlwL3dlYnBhY2svcnVudGltZS9kZWZpbmUgcHJvcGVydHkgZ2V0dGVycyIsIndlYnBhY2s6Ly9iYXR0bGVzaGlwL3dlYnBhY2svcnVudGltZS9oYXNPd25Qcm9wZXJ0eSBzaG9ydGhhbmQiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC93ZWJwYWNrL3J1bnRpbWUvbm9uY2UiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC8uL3NyYy9zdHlsZS5jc3M/NzE2MyIsIndlYnBhY2s6Ly9iYXR0bGVzaGlwLy4vc3JjL2xvZ2ljLmpzIiwid2VicGFjazovL2JhdHRsZXNoaXAvLi9zcmMvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiQGltcG9ydCB1cmwoaHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3MyP2ZhbWlseT1Kb3N0Oml0YWwsd2dodEAwLDEwMC4uOTAwOzEsMTAwLi45MDAmZGlzcGxheT1zd2FwKTtcIl0pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIGBodG1se1xyXG4gICAgZm9udC1mYW1pbHk6IEpvc3QsIHNhbnMtc2VyaWY7XHJcbn1cclxuXHJcbjpyb290LmRhcmsge1xyXG4gICAgLS1ib3JkZXI6IDFweCBzb2xpZCB3aGl0ZXNtb2tlO1xyXG4gICAgLS1iZzogcmdiKDAsIDAsIDApO1xyXG4gICAgLS1iZzI6IHJnYigyOSwgMjksIDI5KTtcclxuICAgIC0tYmczOiByZ2IoMzksIDM5LCAzOSk7XHJcbiAgICAtLXRleHQ6IHdoaXRlO1xyXG4gICAgLS1saWdodGdyYXk6ICNmMGVlZjE7XHJcbiAgICAtLWdyZWVuOiByZ2IoMTA1LCAyNDcsIDEwNSk7XHJcbiAgICAtLXJlZDogcmdiKDI1NSwgMTE4LCAxMTgpO1xyXG4gICAgLS1uYXZ5OiByZ2IoMjEsIDEwMSwgMTkyKTtcclxuICAgIC0tYmx1ZTogcmdiKDMzLCAxNTAsIDI0Myk7XHJcbiAgICAtLW5hdnlUb0JsdWU6IGxpbmVhci1ncmFkaWVudCh0byByaWdodCwgdmFyKC0tbmF2eSksIHZhcigtLWJsdWUpKTtcclxuICAgIC0tc2hhZG93OiAwcHggMnB4IDJweCBsaWdodGdyYXk7XHJcbiAgICAtLWdyYXk6IHJnYig5NCwgOTQsIDk0KTtcclxuICAgIC0tZm9udDogJ0pvc3QnLCBzYW5zLXNlcmlmO1xyXG59XHJcbjpyb290IHtcclxuICAgIC0tYm9yZGVyOiAxcHggc29saWQgYmxhY2s7XHJcbiAgICAtLWJnOiByZ2IoMjU1LCAyNTUsIDI1NSk7XHJcbiAgICAtLWJnMjogcmdiKDI1MCwgMjUwLCAyNTApO1xyXG4gICAgLS1iZzM6IHJnYigyNDUsIDI0NSwgMjQ1KTtcclxuICAgIC0tdGV4dDogYmxhY2s7XHJcbiAgICAtLWxpZ2h0Z3JheTogI2YwZWVmMTtcclxuICAgIC0tZ3JlZW46IHJnYigxMDUsIDI0NywgMTA1KTtcclxuICAgIC0tcmVkOiByZ2IoMjU1LCAxMTgsIDExOCk7XHJcbiAgICAtLW5hdnk6IHJnYigyMSwgMTAxLCAxOTIpO1xyXG4gICAgLS1ibHVlOiByZ2IoMzMsIDE1MCwgMjQzKTtcclxuICAgIC0tbmF2eVRvQmx1ZTogbGluZWFyLWdyYWRpZW50KHRvIHJpZ2h0LCB2YXIoLS1uYXZ5KSwgdmFyKC0tYmx1ZSkpO1xyXG4gICAgLS1zaGFkb3c6IDBweCAycHggMnB4IGxpZ2h0Z3JheTtcclxuICAgIC0tZ3JheTogcmdiKDk0LCA5NCwgOTQpO1xyXG4gICAgLS1mb250OiAnSm9zdCcsIHNhbnMtc2VyaWY7XHJcbn1cclxuYm9keXtcclxuICAgIGZvbnQtZmFtaWx5OiB2YXIoLS1mb250KTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWJnKTtcclxuICAgIGNvbG9yOiB2YXIoLS10ZXh0KTtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgbWluLWhlaWdodDogMTAwdmg7XHJcbn1cclxuI3Jvb3R7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgIG1pbi1oZWlnaHQ6IDEwMHZoO1xyXG59XHJcbi8qQ1NTIFJFU0VUKi9cclxuKixcclxuKjo6YmVmb3JlLFxyXG4qOjphZnRlcntcclxuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XHJcbiAgICBwYWRkaW5nOiAwO1xyXG4gICAgbWFyZ2luOiAwO1xyXG59XHJcblxyXG4vKkNTUyBGT1JNIFJFU0VUKi9cclxuaW5wdXQsIHRleHRhcmVhLCBzZWxlY3QsIGJ1dHRvbiwgbWV0ZXIsIHByb2dyZXNze1xyXG4gICAgbWFyZ2luOiAwO1xyXG4gICAgcGFkZGluZzogMDtcclxuICAgIGJvcmRlcjogbm9uZTtcclxuICAgIG91dGxpbmU6IG5vbmU7IFxyXG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDsgXHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcclxuICAgIGZvbnQtZmFtaWx5OiBpbmhlcml0OyBcclxufVxyXG5idXR0b24sIGlucHV0W3R5cGU9XCJzdWJtaXRcIl0sIGlucHV0W3R5cGU9XCJidXR0b25cIl0ge1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XHJcbn1cclxuaW5wdXRbdHlwZT1cImNoZWNrYm94XCJdLCBpbnB1dFt0eXBlPVwicmFkaW9cIl0ge1xyXG4gICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcclxufVxyXG5zZWxlY3Qge1xyXG4gICAgYXBwZWFyYW5jZTogbm9uZTtcclxuICAgIGJhY2tncm91bmQtaW1hZ2U6IG5vbmU7XHJcbn1cclxudGV4dGFyZWEge1xyXG4gICAgcmVzaXplOiB2ZXJ0aWNhbDtcclxufVxyXG5cclxubGFiZWwsIGZvcm0sIGJ1dHRvbiwgaW5wdXR7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxufVxyXG5cclxuaW5wdXQ6Oi13ZWJraXQtb3V0ZXItc3Bpbi1idXR0b24sXHJcbmlucHV0Ojotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9uIHtcclxuICAgIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcclxuICAgIG1hcmdpbjogMDtcclxufVxyXG5pbnB1dFt0eXBlPW51bWJlcl17XHJcbiAgICBhcHBlYXJhbmNlOiB0ZXh0ZmllbGQ7XHJcbiAgICAtbW96LWFwcGVhcmFuY2U6IHRleHRmaWVsZDtcclxufVxyXG5cclxuLnR0e1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgZm9udC1zaXplOiAxLjVyZW07XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICByaWdodDogMjBweDtcclxufVxyXG5cclxuaGVhZGVye1xyXG4gICAgcGFkZGluZzogMTBweDtcclxuICAgIGZvbnQtZmFtaWx5OiB2YXIoLS1mb250KTtcclxuICAgIGJvcmRlci1ib3R0b206IHZhcigtLWJvcmRlcik7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1iZzIpO1xyXG4gICAgZm9udC1zaXplOiAycmVtO1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxufVxyXG4uaGVhZGVye1xyXG4gICAgZm9udC13ZWlnaHQ6IDcwMDtcclxuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxuICAgIGNvbG9yOiBpbmhlcml0O1xyXG59XHJcbmhlYWRlciBpbWd7XHJcbiAgICB3aWR0aDogODBweDtcclxufVxyXG5cclxuLnN0YXR1c3tcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIHBhZGRpbmc6IDcwcHg7XHJcbiAgICBmb250LXNpemU6IDEuNXJlbTtcclxufVxyXG5cclxubWFpbntcclxuICAgIGZsZXg6IDE7XHJcbiAgICBwYWRkaW5nOiAzMHB4O1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgZ2FwOiAxMDBweDtcclxuICAgIGZsZXgtd3JhcDogd3JhcDtcclxufVxyXG5cclxuLmJvYXJkQ29udGFpbmVye1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgZ2FwOiAxNXB4O1xyXG4gICAgZm9udC1zaXplOiAxLjVyZW07XHJcbn1cclxuXHJcbi8qIC5mb2dPZldhcntcclxuICAgIHdpZHRoOiAyMHB4O1xyXG4gICAgd3JpdGluZy1tb2RlOiB2ZXJ0aWNhbC1scjtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBoZWlnaHQ6IDcwJTtcclxuICAgIHBhZGRpbmc6IDI1cHg7XHJcbiAgICBmb250LXNpemU6IDEuNXJlbTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWJnMyk7XHJcbiAgICBib3JkZXItcmFkaXVzOiAxNXB4O1xyXG4gICAgYm9yZGVyOiB2YXIoLS1ib3JkZXIpO1xyXG59ICovXHJcblxyXG4uYm9hcmR7XHJcbiAgICBkaXNwbGF5OiBncmlkO1xyXG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoOSwgNTBweCk7XHJcbn1cclxuXHJcbi5ib2FyZCBkaXZ7XHJcbiAgICB3aWR0aDogNTBweDtcclxuICAgIGhlaWdodDogNTBweDtcclxuICAgIGJvcmRlcjogdmFyKC0tYm9yZGVyKVxyXG59XHJcblxyXG4uYm9hcmRDb250YWluZXIuY29tcHV0ZXIgLmJvYXJkIGRpdjpob3ZlcntcclxuICAgIGJveC1zaGFkb3c6IGluc2V0IDAgMCAxMDBweCAxMDBweCByZ2JhKDEwMywgMTE0LCAyMDksIDAuNDAyKTtcclxuICAgIGN1cnNvcjogY3Jvc3NoYWlyO1xyXG59XHJcblxyXG5mb290ZXJ7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICBwYWRkaW5nOiAxMHB4O1xyXG4gICAgZm9udC1zaXplOiAxLjJyZW07XHJcbiAgICBib3JkZXItdG9wOiB2YXIoLS1ib3JkZXIpO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tYmcyKTtcclxufVxyXG5cclxuLm1pc3NlZHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IG9yYW5nZTtcclxufVxyXG5cclxuLmhpdHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IGNyaW1zb247XHJcbn1cclxuXHJcbi5zaGlwe1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tZ3JheSk7XHJcbn1gLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy9zdHlsZS5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBRUE7SUFDSSw2QkFBNkI7QUFDakM7O0FBRUE7SUFDSSw4QkFBOEI7SUFDOUIsa0JBQWtCO0lBQ2xCLHNCQUFzQjtJQUN0QixzQkFBc0I7SUFDdEIsYUFBYTtJQUNiLG9CQUFvQjtJQUNwQiwyQkFBMkI7SUFDM0IseUJBQXlCO0lBQ3pCLHlCQUF5QjtJQUN6Qix5QkFBeUI7SUFDekIsaUVBQWlFO0lBQ2pFLCtCQUErQjtJQUMvQix1QkFBdUI7SUFDdkIsMEJBQTBCO0FBQzlCO0FBQ0E7SUFDSSx5QkFBeUI7SUFDekIsd0JBQXdCO0lBQ3hCLHlCQUF5QjtJQUN6Qix5QkFBeUI7SUFDekIsYUFBYTtJQUNiLG9CQUFvQjtJQUNwQiwyQkFBMkI7SUFDM0IseUJBQXlCO0lBQ3pCLHlCQUF5QjtJQUN6Qix5QkFBeUI7SUFDekIsaUVBQWlFO0lBQ2pFLCtCQUErQjtJQUMvQix1QkFBdUI7SUFDdkIsMEJBQTBCO0FBQzlCO0FBQ0E7SUFDSSx3QkFBd0I7SUFDeEIsMkJBQTJCO0lBQzNCLGtCQUFrQjtJQUNsQixhQUFhO0lBQ2Isc0JBQXNCO0lBQ3RCLGlCQUFpQjtBQUNyQjtBQUNBO0lBQ0ksYUFBYTtJQUNiLHNCQUFzQjtJQUN0QixpQkFBaUI7QUFDckI7QUFDQSxZQUFZO0FBQ1o7OztJQUdJLHNCQUFzQjtJQUN0QixVQUFVO0lBQ1YsU0FBUztBQUNiOztBQUVBLGlCQUFpQjtBQUNqQjtJQUNJLFNBQVM7SUFDVCxVQUFVO0lBQ1YsWUFBWTtJQUNaLGFBQWE7SUFDYixzQkFBc0I7SUFDdEIsNkJBQTZCO0lBQzdCLG9CQUFvQjtBQUN4QjtBQUNBO0lBQ0ksZUFBZTtJQUNmLDZCQUE2QjtBQUNqQztBQUNBO0lBQ0ksc0JBQXNCO0FBQzFCO0FBQ0E7SUFDSSxnQkFBZ0I7SUFDaEIsc0JBQXNCO0FBQzFCO0FBQ0E7SUFDSSxnQkFBZ0I7QUFDcEI7O0FBRUE7SUFDSSxjQUFjO0FBQ2xCOztBQUVBOztJQUVJLHdCQUF3QjtJQUN4QixTQUFTO0FBQ2I7QUFDQTtJQUNJLHFCQUFxQjtJQUNyQiwwQkFBMEI7QUFDOUI7O0FBRUE7SUFDSSxlQUFlO0lBQ2YsaUJBQWlCO0lBQ2pCLGtCQUFrQjtJQUNsQixXQUFXO0FBQ2Y7O0FBRUE7SUFDSSxhQUFhO0lBQ2Isd0JBQXdCO0lBQ3hCLDRCQUE0QjtJQUM1Qiw0QkFBNEI7SUFDNUIsZUFBZTtJQUNmLGFBQWE7SUFDYixtQkFBbUI7SUFDbkIsdUJBQXVCO0FBQzNCO0FBQ0E7SUFDSSxnQkFBZ0I7SUFDaEIscUJBQXFCO0lBQ3JCLGNBQWM7QUFDbEI7QUFDQTtJQUNJLFdBQVc7QUFDZjs7QUFFQTtJQUNJLGtCQUFrQjtJQUNsQixhQUFhO0lBQ2IsaUJBQWlCO0FBQ3JCOztBQUVBO0lBQ0ksT0FBTztJQUNQLGFBQWE7SUFDYixhQUFhO0lBQ2IsdUJBQXVCO0lBQ3ZCLFVBQVU7SUFDVixlQUFlO0FBQ25COztBQUVBO0lBQ0ksYUFBYTtJQUNiLHNCQUFzQjtJQUN0QixtQkFBbUI7SUFDbkIsU0FBUztJQUNULGlCQUFpQjtBQUNyQjs7QUFFQTs7Ozs7Ozs7Ozs7O0dBWUc7O0FBRUg7SUFDSSxhQUFhO0lBQ2Isc0NBQXNDO0FBQzFDOztBQUVBO0lBQ0ksV0FBVztJQUNYLFlBQVk7SUFDWjtBQUNKOztBQUVBO0lBQ0ksNERBQTREO0lBQzVELGlCQUFpQjtBQUNyQjs7QUFFQTtJQUNJLGtCQUFrQjtJQUNsQixhQUFhO0lBQ2IsaUJBQWlCO0lBQ2pCLHlCQUF5QjtJQUN6Qiw0QkFBNEI7QUFDaEM7O0FBRUE7SUFDSSx3QkFBd0I7QUFDNUI7O0FBRUE7SUFDSSx5QkFBeUI7QUFDN0I7O0FBRUE7SUFDSSw2QkFBNkI7QUFDakNcIixcInNvdXJjZXNDb250ZW50XCI6W1wiQGltcG9ydCB1cmwoJ2h0dHBzOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzMj9mYW1pbHk9Sm9zdDppdGFsLHdnaHRAMCwxMDAuLjkwMDsxLDEwMC4uOTAwJmRpc3BsYXk9c3dhcCcpO1xcclxcblxcclxcbmh0bWx7XFxyXFxuICAgIGZvbnQtZmFtaWx5OiBKb3N0LCBzYW5zLXNlcmlmO1xcclxcbn1cXHJcXG5cXHJcXG46cm9vdC5kYXJrIHtcXHJcXG4gICAgLS1ib3JkZXI6IDFweCBzb2xpZCB3aGl0ZXNtb2tlO1xcclxcbiAgICAtLWJnOiByZ2IoMCwgMCwgMCk7XFxyXFxuICAgIC0tYmcyOiByZ2IoMjksIDI5LCAyOSk7XFxyXFxuICAgIC0tYmczOiByZ2IoMzksIDM5LCAzOSk7XFxyXFxuICAgIC0tdGV4dDogd2hpdGU7XFxyXFxuICAgIC0tbGlnaHRncmF5OiAjZjBlZWYxO1xcclxcbiAgICAtLWdyZWVuOiByZ2IoMTA1LCAyNDcsIDEwNSk7XFxyXFxuICAgIC0tcmVkOiByZ2IoMjU1LCAxMTgsIDExOCk7XFxyXFxuICAgIC0tbmF2eTogcmdiKDIxLCAxMDEsIDE5Mik7XFxyXFxuICAgIC0tYmx1ZTogcmdiKDMzLCAxNTAsIDI0Myk7XFxyXFxuICAgIC0tbmF2eVRvQmx1ZTogbGluZWFyLWdyYWRpZW50KHRvIHJpZ2h0LCB2YXIoLS1uYXZ5KSwgdmFyKC0tYmx1ZSkpO1xcclxcbiAgICAtLXNoYWRvdzogMHB4IDJweCAycHggbGlnaHRncmF5O1xcclxcbiAgICAtLWdyYXk6IHJnYig5NCwgOTQsIDk0KTtcXHJcXG4gICAgLS1mb250OiAnSm9zdCcsIHNhbnMtc2VyaWY7XFxyXFxufVxcclxcbjpyb290IHtcXHJcXG4gICAgLS1ib3JkZXI6IDFweCBzb2xpZCBibGFjaztcXHJcXG4gICAgLS1iZzogcmdiKDI1NSwgMjU1LCAyNTUpO1xcclxcbiAgICAtLWJnMjogcmdiKDI1MCwgMjUwLCAyNTApO1xcclxcbiAgICAtLWJnMzogcmdiKDI0NSwgMjQ1LCAyNDUpO1xcclxcbiAgICAtLXRleHQ6IGJsYWNrO1xcclxcbiAgICAtLWxpZ2h0Z3JheTogI2YwZWVmMTtcXHJcXG4gICAgLS1ncmVlbjogcmdiKDEwNSwgMjQ3LCAxMDUpO1xcclxcbiAgICAtLXJlZDogcmdiKDI1NSwgMTE4LCAxMTgpO1xcclxcbiAgICAtLW5hdnk6IHJnYigyMSwgMTAxLCAxOTIpO1xcclxcbiAgICAtLWJsdWU6IHJnYigzMywgMTUwLCAyNDMpO1xcclxcbiAgICAtLW5hdnlUb0JsdWU6IGxpbmVhci1ncmFkaWVudCh0byByaWdodCwgdmFyKC0tbmF2eSksIHZhcigtLWJsdWUpKTtcXHJcXG4gICAgLS1zaGFkb3c6IDBweCAycHggMnB4IGxpZ2h0Z3JheTtcXHJcXG4gICAgLS1ncmF5OiByZ2IoOTQsIDk0LCA5NCk7XFxyXFxuICAgIC0tZm9udDogJ0pvc3QnLCBzYW5zLXNlcmlmO1xcclxcbn1cXHJcXG5ib2R5e1xcclxcbiAgICBmb250LWZhbWlseTogdmFyKC0tZm9udCk7XFxyXFxuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWJnKTtcXHJcXG4gICAgY29sb3I6IHZhcigtLXRleHQpO1xcclxcbiAgICBkaXNwbGF5OiBmbGV4O1xcclxcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcclxcbiAgICBtaW4taGVpZ2h0OiAxMDB2aDtcXHJcXG59XFxyXFxuI3Jvb3R7XFxyXFxuICAgIGRpc3BsYXk6IGZsZXg7XFxyXFxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxyXFxuICAgIG1pbi1oZWlnaHQ6IDEwMHZoO1xcclxcbn1cXHJcXG4vKkNTUyBSRVNFVCovXFxyXFxuKixcXHJcXG4qOjpiZWZvcmUsXFxyXFxuKjo6YWZ0ZXJ7XFxyXFxuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XFxyXFxuICAgIHBhZGRpbmc6IDA7XFxyXFxuICAgIG1hcmdpbjogMDtcXHJcXG59XFxyXFxuXFxyXFxuLypDU1MgRk9STSBSRVNFVCovXFxyXFxuaW5wdXQsIHRleHRhcmVhLCBzZWxlY3QsIGJ1dHRvbiwgbWV0ZXIsIHByb2dyZXNze1xcclxcbiAgICBtYXJnaW46IDA7XFxyXFxuICAgIHBhZGRpbmc6IDA7XFxyXFxuICAgIGJvcmRlcjogbm9uZTtcXHJcXG4gICAgb3V0bGluZTogbm9uZTsgXFxyXFxuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7IFxcclxcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcXHJcXG4gICAgZm9udC1mYW1pbHk6IGluaGVyaXQ7IFxcclxcbn1cXHJcXG5idXR0b24sIGlucHV0W3R5cGU9XFxcInN1Ym1pdFxcXCJdLCBpbnB1dFt0eXBlPVxcXCJidXR0b25cXFwiXSB7XFxyXFxuICAgIGN1cnNvcjogcG9pbnRlcjtcXHJcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XFxyXFxufVxcclxcbmlucHV0W3R5cGU9XFxcImNoZWNrYm94XFxcIl0sIGlucHV0W3R5cGU9XFxcInJhZGlvXFxcIl0ge1xcclxcbiAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xcclxcbn1cXHJcXG5zZWxlY3Qge1xcclxcbiAgICBhcHBlYXJhbmNlOiBub25lO1xcclxcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiBub25lO1xcclxcbn1cXHJcXG50ZXh0YXJlYSB7XFxyXFxuICAgIHJlc2l6ZTogdmVydGljYWw7XFxyXFxufVxcclxcblxcclxcbmxhYmVsLCBmb3JtLCBidXR0b24sIGlucHV0e1xcclxcbiAgICBkaXNwbGF5OiBibG9jaztcXHJcXG59XFxyXFxuXFxyXFxuaW5wdXQ6Oi13ZWJraXQtb3V0ZXItc3Bpbi1idXR0b24sXFxyXFxuaW5wdXQ6Oi13ZWJraXQtaW5uZXItc3Bpbi1idXR0b24ge1xcclxcbiAgICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XFxyXFxuICAgIG1hcmdpbjogMDtcXHJcXG59XFxyXFxuaW5wdXRbdHlwZT1udW1iZXJde1xcclxcbiAgICBhcHBlYXJhbmNlOiB0ZXh0ZmllbGQ7XFxyXFxuICAgIC1tb3otYXBwZWFyYW5jZTogdGV4dGZpZWxkO1xcclxcbn1cXHJcXG5cXHJcXG4udHR7XFxyXFxuICAgIGN1cnNvcjogcG9pbnRlcjtcXHJcXG4gICAgZm9udC1zaXplOiAxLjVyZW07XFxyXFxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXHJcXG4gICAgcmlnaHQ6IDIwcHg7XFxyXFxufVxcclxcblxcclxcbmhlYWRlcntcXHJcXG4gICAgcGFkZGluZzogMTBweDtcXHJcXG4gICAgZm9udC1mYW1pbHk6IHZhcigtLWZvbnQpO1xcclxcbiAgICBib3JkZXItYm90dG9tOiB2YXIoLS1ib3JkZXIpO1xcclxcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1iZzIpO1xcclxcbiAgICBmb250LXNpemU6IDJyZW07XFxyXFxuICAgIGRpc3BsYXk6IGZsZXg7XFxyXFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxyXFxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcclxcbn1cXHJcXG4uaGVhZGVye1xcclxcbiAgICBmb250LXdlaWdodDogNzAwO1xcclxcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XFxyXFxuICAgIGNvbG9yOiBpbmhlcml0O1xcclxcbn1cXHJcXG5oZWFkZXIgaW1ne1xcclxcbiAgICB3aWR0aDogODBweDtcXHJcXG59XFxyXFxuXFxyXFxuLnN0YXR1c3tcXHJcXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xcclxcbiAgICBwYWRkaW5nOiA3MHB4O1xcclxcbiAgICBmb250LXNpemU6IDEuNXJlbTtcXHJcXG59XFxyXFxuXFxyXFxubWFpbntcXHJcXG4gICAgZmxleDogMTtcXHJcXG4gICAgcGFkZGluZzogMzBweDtcXHJcXG4gICAgZGlzcGxheTogZmxleDtcXHJcXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxyXFxuICAgIGdhcDogMTAwcHg7XFxyXFxuICAgIGZsZXgtd3JhcDogd3JhcDtcXHJcXG59XFxyXFxuXFxyXFxuLmJvYXJkQ29udGFpbmVye1xcclxcbiAgICBkaXNwbGF5OiBmbGV4O1xcclxcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcclxcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcclxcbiAgICBnYXA6IDE1cHg7XFxyXFxuICAgIGZvbnQtc2l6ZTogMS41cmVtO1xcclxcbn1cXHJcXG5cXHJcXG4vKiAuZm9nT2ZXYXJ7XFxyXFxuICAgIHdpZHRoOiAyMHB4O1xcclxcbiAgICB3cml0aW5nLW1vZGU6IHZlcnRpY2FsLWxyO1xcclxcbiAgICBkaXNwbGF5OiBmbGV4O1xcclxcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXHJcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXHJcXG4gICAgaGVpZ2h0OiA3MCU7XFxyXFxuICAgIHBhZGRpbmc6IDI1cHg7XFxyXFxuICAgIGZvbnQtc2l6ZTogMS41cmVtO1xcclxcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1iZzMpO1xcclxcbiAgICBib3JkZXItcmFkaXVzOiAxNXB4O1xcclxcbiAgICBib3JkZXI6IHZhcigtLWJvcmRlcik7XFxyXFxufSAqL1xcclxcblxcclxcbi5ib2FyZHtcXHJcXG4gICAgZGlzcGxheTogZ3JpZDtcXHJcXG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoOSwgNTBweCk7XFxyXFxufVxcclxcblxcclxcbi5ib2FyZCBkaXZ7XFxyXFxuICAgIHdpZHRoOiA1MHB4O1xcclxcbiAgICBoZWlnaHQ6IDUwcHg7XFxyXFxuICAgIGJvcmRlcjogdmFyKC0tYm9yZGVyKVxcclxcbn1cXHJcXG5cXHJcXG4uYm9hcmRDb250YWluZXIuY29tcHV0ZXIgLmJvYXJkIGRpdjpob3ZlcntcXHJcXG4gICAgYm94LXNoYWRvdzogaW5zZXQgMCAwIDEwMHB4IDEwMHB4IHJnYmEoMTAzLCAxMTQsIDIwOSwgMC40MDIpO1xcclxcbiAgICBjdXJzb3I6IGNyb3NzaGFpcjtcXHJcXG59XFxyXFxuXFxyXFxuZm9vdGVye1xcclxcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxyXFxuICAgIHBhZGRpbmc6IDEwcHg7XFxyXFxuICAgIGZvbnQtc2l6ZTogMS4ycmVtO1xcclxcbiAgICBib3JkZXItdG9wOiB2YXIoLS1ib3JkZXIpO1xcclxcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1iZzIpO1xcclxcbn1cXHJcXG5cXHJcXG4ubWlzc2Vke1xcclxcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBvcmFuZ2U7XFxyXFxufVxcclxcblxcclxcbi5oaXR7XFxyXFxuICAgIGJhY2tncm91bmQtY29sb3I6IGNyaW1zb247XFxyXFxufVxcclxcblxcclxcbi5zaGlwe1xcclxcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1ncmF5KTtcXHJcXG59XCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIlwidXNlIHN0cmljdFwiO1xuXG4vKlxuICBNSVQgTGljZW5zZSBodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlLnBocFxuICBBdXRob3IgVG9iaWFzIEtvcHBlcnMgQHNva3JhXG4qL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoY3NzV2l0aE1hcHBpbmdUb1N0cmluZykge1xuICB2YXIgbGlzdCA9IFtdO1xuXG4gIC8vIHJldHVybiB0aGUgbGlzdCBvZiBtb2R1bGVzIGFzIGNzcyBzdHJpbmdcbiAgbGlzdC50b1N0cmluZyA9IGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICAgIHJldHVybiB0aGlzLm1hcChmdW5jdGlvbiAoaXRlbSkge1xuICAgICAgdmFyIGNvbnRlbnQgPSBcIlwiO1xuICAgICAgdmFyIG5lZWRMYXllciA9IHR5cGVvZiBpdGVtWzVdICE9PSBcInVuZGVmaW5lZFwiO1xuICAgICAgaWYgKGl0ZW1bNF0pIHtcbiAgICAgICAgY29udGVudCArPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KGl0ZW1bNF0sIFwiKSB7XCIpO1xuICAgICAgfVxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgY29udGVudCArPSBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKTtcbiAgICAgIH1cbiAgICAgIGlmIChuZWVkTGF5ZXIpIHtcbiAgICAgICAgY29udGVudCArPSBcIkBsYXllclwiLmNvbmNhdChpdGVtWzVdLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQoaXRlbVs1XSkgOiBcIlwiLCBcIiB7XCIpO1xuICAgICAgfVxuICAgICAgY29udGVudCArPSBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0pO1xuICAgICAgaWYgKG5lZWRMYXllcikge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cbiAgICAgIGlmIChpdGVtWzRdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG4gICAgICByZXR1cm4gY29udGVudDtcbiAgICB9KS5qb2luKFwiXCIpO1xuICB9O1xuXG4gIC8vIGltcG9ydCBhIGxpc3Qgb2YgbW9kdWxlcyBpbnRvIHRoZSBsaXN0XG4gIGxpc3QuaSA9IGZ1bmN0aW9uIGkobW9kdWxlcywgbWVkaWEsIGRlZHVwZSwgc3VwcG9ydHMsIGxheWVyKSB7XG4gICAgaWYgKHR5cGVvZiBtb2R1bGVzID09PSBcInN0cmluZ1wiKSB7XG4gICAgICBtb2R1bGVzID0gW1tudWxsLCBtb2R1bGVzLCB1bmRlZmluZWRdXTtcbiAgICB9XG4gICAgdmFyIGFscmVhZHlJbXBvcnRlZE1vZHVsZXMgPSB7fTtcbiAgICBpZiAoZGVkdXBlKSB7XG4gICAgICBmb3IgKHZhciBrID0gMDsgayA8IHRoaXMubGVuZ3RoOyBrKyspIHtcbiAgICAgICAgdmFyIGlkID0gdGhpc1trXVswXTtcbiAgICAgICAgaWYgKGlkICE9IG51bGwpIHtcbiAgICAgICAgICBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2lkXSA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgZm9yICh2YXIgX2sgPSAwOyBfayA8IG1vZHVsZXMubGVuZ3RoOyBfaysrKSB7XG4gICAgICB2YXIgaXRlbSA9IFtdLmNvbmNhdChtb2R1bGVzW19rXSk7XG4gICAgICBpZiAoZGVkdXBlICYmIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaXRlbVswXV0pIHtcbiAgICAgICAgY29udGludWU7XG4gICAgICB9XG4gICAgICBpZiAodHlwZW9mIGxheWVyICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgIGlmICh0eXBlb2YgaXRlbVs1XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICAgIGl0ZW1bNV0gPSBsYXllcjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAbGF5ZXJcIi5jb25jYXQoaXRlbVs1XS5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KGl0ZW1bNV0pIDogXCJcIiwgXCIge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bNV0gPSBsYXllcjtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgaWYgKG1lZGlhKSB7XG4gICAgICAgIGlmICghaXRlbVsyXSkge1xuICAgICAgICAgIGl0ZW1bMl0gPSBtZWRpYTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWE7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmIChzdXBwb3J0cykge1xuICAgICAgICBpZiAoIWl0ZW1bNF0pIHtcbiAgICAgICAgICBpdGVtWzRdID0gXCJcIi5jb25jYXQoc3VwcG9ydHMpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KGl0ZW1bNF0sIFwiKSB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVs0XSA9IHN1cHBvcnRzO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBsaXN0LnB1c2goaXRlbSk7XG4gICAgfVxuICB9O1xuICByZXR1cm4gbGlzdDtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0ZW0pIHtcbiAgdmFyIGNvbnRlbnQgPSBpdGVtWzFdO1xuICB2YXIgY3NzTWFwcGluZyA9IGl0ZW1bM107XG4gIGlmICghY3NzTWFwcGluZykge1xuICAgIHJldHVybiBjb250ZW50O1xuICB9XG4gIGlmICh0eXBlb2YgYnRvYSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgdmFyIGJhc2U2NCA9IGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KGNzc01hcHBpbmcpKSkpO1xuICAgIHZhciBkYXRhID0gXCJzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxcIi5jb25jYXQoYmFzZTY0KTtcbiAgICB2YXIgc291cmNlTWFwcGluZyA9IFwiLyojIFwiLmNvbmNhdChkYXRhLCBcIiAqL1wiKTtcbiAgICByZXR1cm4gW2NvbnRlbnRdLmNvbmNhdChbc291cmNlTWFwcGluZ10pLmpvaW4oXCJcXG5cIik7XG4gIH1cbiAgcmV0dXJuIFtjb250ZW50XS5qb2luKFwiXFxuXCIpO1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxudmFyIHN0eWxlc0luRE9NID0gW107XG5mdW5jdGlvbiBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKSB7XG4gIHZhciByZXN1bHQgPSAtMTtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBzdHlsZXNJbkRPTS5sZW5ndGg7IGkrKykge1xuICAgIGlmIChzdHlsZXNJbkRPTVtpXS5pZGVudGlmaWVyID09PSBpZGVudGlmaWVyKSB7XG4gICAgICByZXN1bHQgPSBpO1xuICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG4gIHJldHVybiByZXN1bHQ7XG59XG5mdW5jdGlvbiBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucykge1xuICB2YXIgaWRDb3VudE1hcCA9IHt9O1xuICB2YXIgaWRlbnRpZmllcnMgPSBbXTtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBsaXN0Lmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIGl0ZW0gPSBsaXN0W2ldO1xuICAgIHZhciBpZCA9IG9wdGlvbnMuYmFzZSA/IGl0ZW1bMF0gKyBvcHRpb25zLmJhc2UgOiBpdGVtWzBdO1xuICAgIHZhciBjb3VudCA9IGlkQ291bnRNYXBbaWRdIHx8IDA7XG4gICAgdmFyIGlkZW50aWZpZXIgPSBcIlwiLmNvbmNhdChpZCwgXCIgXCIpLmNvbmNhdChjb3VudCk7XG4gICAgaWRDb3VudE1hcFtpZF0gPSBjb3VudCArIDE7XG4gICAgdmFyIGluZGV4QnlJZGVudGlmaWVyID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgdmFyIG9iaiA9IHtcbiAgICAgIGNzczogaXRlbVsxXSxcbiAgICAgIG1lZGlhOiBpdGVtWzJdLFxuICAgICAgc291cmNlTWFwOiBpdGVtWzNdLFxuICAgICAgc3VwcG9ydHM6IGl0ZW1bNF0sXG4gICAgICBsYXllcjogaXRlbVs1XVxuICAgIH07XG4gICAgaWYgKGluZGV4QnlJZGVudGlmaWVyICE9PSAtMSkge1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhCeUlkZW50aWZpZXJdLnJlZmVyZW5jZXMrKztcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4QnlJZGVudGlmaWVyXS51cGRhdGVyKG9iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciB1cGRhdGVyID0gYWRkRWxlbWVudFN0eWxlKG9iaiwgb3B0aW9ucyk7XG4gICAgICBvcHRpb25zLmJ5SW5kZXggPSBpO1xuICAgICAgc3R5bGVzSW5ET00uc3BsaWNlKGksIDAsIHtcbiAgICAgICAgaWRlbnRpZmllcjogaWRlbnRpZmllcixcbiAgICAgICAgdXBkYXRlcjogdXBkYXRlcixcbiAgICAgICAgcmVmZXJlbmNlczogMVxuICAgICAgfSk7XG4gICAgfVxuICAgIGlkZW50aWZpZXJzLnB1c2goaWRlbnRpZmllcik7XG4gIH1cbiAgcmV0dXJuIGlkZW50aWZpZXJzO1xufVxuZnVuY3Rpb24gYWRkRWxlbWVudFN0eWxlKG9iaiwgb3B0aW9ucykge1xuICB2YXIgYXBpID0gb3B0aW9ucy5kb21BUEkob3B0aW9ucyk7XG4gIGFwaS51cGRhdGUob2JqKTtcbiAgdmFyIHVwZGF0ZXIgPSBmdW5jdGlvbiB1cGRhdGVyKG5ld09iaikge1xuICAgIGlmIChuZXdPYmopIHtcbiAgICAgIGlmIChuZXdPYmouY3NzID09PSBvYmouY3NzICYmIG5ld09iai5tZWRpYSA9PT0gb2JqLm1lZGlhICYmIG5ld09iai5zb3VyY2VNYXAgPT09IG9iai5zb3VyY2VNYXAgJiYgbmV3T2JqLnN1cHBvcnRzID09PSBvYmouc3VwcG9ydHMgJiYgbmV3T2JqLmxheWVyID09PSBvYmoubGF5ZXIpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgYXBpLnVwZGF0ZShvYmogPSBuZXdPYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICBhcGkucmVtb3ZlKCk7XG4gICAgfVxuICB9O1xuICByZXR1cm4gdXBkYXRlcjtcbn1cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGxpc3QsIG9wdGlvbnMpIHtcbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG4gIGxpc3QgPSBsaXN0IHx8IFtdO1xuICB2YXIgbGFzdElkZW50aWZpZXJzID0gbW9kdWxlc1RvRG9tKGxpc3QsIG9wdGlvbnMpO1xuICByZXR1cm4gZnVuY3Rpb24gdXBkYXRlKG5ld0xpc3QpIHtcbiAgICBuZXdMaXN0ID0gbmV3TGlzdCB8fCBbXTtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxhc3RJZGVudGlmaWVycy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIGlkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbaV07XG4gICAgICB2YXIgaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4XS5yZWZlcmVuY2VzLS07XG4gICAgfVxuICAgIHZhciBuZXdMYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obmV3TGlzdCwgb3B0aW9ucyk7XG4gICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IGxhc3RJZGVudGlmaWVycy5sZW5ndGg7IF9pKyspIHtcbiAgICAgIHZhciBfaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tfaV07XG4gICAgICB2YXIgX2luZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoX2lkZW50aWZpZXIpO1xuICAgICAgaWYgKHN0eWxlc0luRE9NW19pbmRleF0ucmVmZXJlbmNlcyA9PT0gMCkge1xuICAgICAgICBzdHlsZXNJbkRPTVtfaW5kZXhdLnVwZGF0ZXIoKTtcbiAgICAgICAgc3R5bGVzSW5ET00uc3BsaWNlKF9pbmRleCwgMSk7XG4gICAgICB9XG4gICAgfVxuICAgIGxhc3RJZGVudGlmaWVycyA9IG5ld0xhc3RJZGVudGlmaWVycztcbiAgfTtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBtZW1vID0ge307XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gZ2V0VGFyZ2V0KHRhcmdldCkge1xuICBpZiAodHlwZW9mIG1lbW9bdGFyZ2V0XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgIHZhciBzdHlsZVRhcmdldCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGFyZ2V0KTtcblxuICAgIC8vIFNwZWNpYWwgY2FzZSB0byByZXR1cm4gaGVhZCBvZiBpZnJhbWUgaW5zdGVhZCBvZiBpZnJhbWUgaXRzZWxmXG4gICAgaWYgKHdpbmRvdy5IVE1MSUZyYW1lRWxlbWVudCAmJiBzdHlsZVRhcmdldCBpbnN0YW5jZW9mIHdpbmRvdy5IVE1MSUZyYW1lRWxlbWVudCkge1xuICAgICAgdHJ5IHtcbiAgICAgICAgLy8gVGhpcyB3aWxsIHRocm93IGFuIGV4Y2VwdGlvbiBpZiBhY2Nlc3MgdG8gaWZyYW1lIGlzIGJsb2NrZWRcbiAgICAgICAgLy8gZHVlIHRvIGNyb3NzLW9yaWdpbiByZXN0cmljdGlvbnNcbiAgICAgICAgc3R5bGVUYXJnZXQgPSBzdHlsZVRhcmdldC5jb250ZW50RG9jdW1lbnQuaGVhZDtcbiAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgLy8gaXN0YW5idWwgaWdub3JlIG5leHRcbiAgICAgICAgc3R5bGVUYXJnZXQgPSBudWxsO1xuICAgICAgfVxuICAgIH1cbiAgICBtZW1vW3RhcmdldF0gPSBzdHlsZVRhcmdldDtcbiAgfVxuICByZXR1cm4gbWVtb1t0YXJnZXRdO1xufVxuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGluc2VydEJ5U2VsZWN0b3IoaW5zZXJ0LCBzdHlsZSkge1xuICB2YXIgdGFyZ2V0ID0gZ2V0VGFyZ2V0KGluc2VydCk7XG4gIGlmICghdGFyZ2V0KSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiQ291bGRuJ3QgZmluZCBhIHN0eWxlIHRhcmdldC4gVGhpcyBwcm9iYWJseSBtZWFucyB0aGF0IHRoZSB2YWx1ZSBmb3IgdGhlICdpbnNlcnQnIHBhcmFtZXRlciBpcyBpbnZhbGlkLlwiKTtcbiAgfVxuICB0YXJnZXQuYXBwZW5kQ2hpbGQoc3R5bGUpO1xufVxubW9kdWxlLmV4cG9ydHMgPSBpbnNlcnRCeVNlbGVjdG9yOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKSB7XG4gIHZhciBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInN0eWxlXCIpO1xuICBvcHRpb25zLnNldEF0dHJpYnV0ZXMoZWxlbWVudCwgb3B0aW9ucy5hdHRyaWJ1dGVzKTtcbiAgb3B0aW9ucy5pbnNlcnQoZWxlbWVudCwgb3B0aW9ucy5vcHRpb25zKTtcbiAgcmV0dXJuIGVsZW1lbnQ7XG59XG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydFN0eWxlRWxlbWVudDsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBzZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMoc3R5bGVFbGVtZW50KSB7XG4gIHZhciBub25jZSA9IHR5cGVvZiBfX3dlYnBhY2tfbm9uY2VfXyAhPT0gXCJ1bmRlZmluZWRcIiA/IF9fd2VicGFja19ub25jZV9fIDogbnVsbDtcbiAgaWYgKG5vbmNlKSB7XG4gICAgc3R5bGVFbGVtZW50LnNldEF0dHJpYnV0ZShcIm5vbmNlXCIsIG5vbmNlKTtcbiAgfVxufVxubW9kdWxlLmV4cG9ydHMgPSBzZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXM7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gYXBwbHkoc3R5bGVFbGVtZW50LCBvcHRpb25zLCBvYmopIHtcbiAgdmFyIGNzcyA9IFwiXCI7XG4gIGlmIChvYmouc3VwcG9ydHMpIHtcbiAgICBjc3MgKz0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChvYmouc3VwcG9ydHMsIFwiKSB7XCIpO1xuICB9XG4gIGlmIChvYmoubWVkaWEpIHtcbiAgICBjc3MgKz0gXCJAbWVkaWEgXCIuY29uY2F0KG9iai5tZWRpYSwgXCIge1wiKTtcbiAgfVxuICB2YXIgbmVlZExheWVyID0gdHlwZW9mIG9iai5sYXllciAhPT0gXCJ1bmRlZmluZWRcIjtcbiAgaWYgKG5lZWRMYXllcikge1xuICAgIGNzcyArPSBcIkBsYXllclwiLmNvbmNhdChvYmoubGF5ZXIubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChvYmoubGF5ZXIpIDogXCJcIiwgXCIge1wiKTtcbiAgfVxuICBjc3MgKz0gb2JqLmNzcztcbiAgaWYgKG5lZWRMYXllcikge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuICBpZiAob2JqLm1lZGlhKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG4gIGlmIChvYmouc3VwcG9ydHMpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cbiAgdmFyIHNvdXJjZU1hcCA9IG9iai5zb3VyY2VNYXA7XG4gIGlmIChzb3VyY2VNYXAgJiYgdHlwZW9mIGJ0b2EgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICBjc3MgKz0gXCJcXG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LFwiLmNvbmNhdChidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShzb3VyY2VNYXApKSkpLCBcIiAqL1wiKTtcbiAgfVxuXG4gIC8vIEZvciBvbGQgSUVcbiAgLyogaXN0YW5idWwgaWdub3JlIGlmICAqL1xuICBvcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtKGNzcywgc3R5bGVFbGVtZW50LCBvcHRpb25zLm9wdGlvbnMpO1xufVxuZnVuY3Rpb24gcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCkge1xuICAvLyBpc3RhbmJ1bCBpZ25vcmUgaWZcbiAgaWYgKHN0eWxlRWxlbWVudC5wYXJlbnROb2RlID09PSBudWxsKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIHN0eWxlRWxlbWVudC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHN0eWxlRWxlbWVudCk7XG59XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gZG9tQVBJKG9wdGlvbnMpIHtcbiAgaWYgKHR5cGVvZiBkb2N1bWVudCA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgIHJldHVybiB7XG4gICAgICB1cGRhdGU6IGZ1bmN0aW9uIHVwZGF0ZSgpIHt9LFxuICAgICAgcmVtb3ZlOiBmdW5jdGlvbiByZW1vdmUoKSB7fVxuICAgIH07XG4gIH1cbiAgdmFyIHN0eWxlRWxlbWVudCA9IG9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMpO1xuICByZXR1cm4ge1xuICAgIHVwZGF0ZTogZnVuY3Rpb24gdXBkYXRlKG9iaikge1xuICAgICAgYXBwbHkoc3R5bGVFbGVtZW50LCBvcHRpb25zLCBvYmopO1xuICAgIH0sXG4gICAgcmVtb3ZlOiBmdW5jdGlvbiByZW1vdmUoKSB7XG4gICAgICByZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGVFbGVtZW50KTtcbiAgICB9XG4gIH07XG59XG5tb2R1bGUuZXhwb3J0cyA9IGRvbUFQSTsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBzdHlsZVRhZ1RyYW5zZm9ybShjc3MsIHN0eWxlRWxlbWVudCkge1xuICBpZiAoc3R5bGVFbGVtZW50LnN0eWxlU2hlZXQpIHtcbiAgICBzdHlsZUVsZW1lbnQuc3R5bGVTaGVldC5jc3NUZXh0ID0gY3NzO1xuICB9IGVsc2Uge1xuICAgIHdoaWxlIChzdHlsZUVsZW1lbnQuZmlyc3RDaGlsZCkge1xuICAgICAgc3R5bGVFbGVtZW50LnJlbW92ZUNoaWxkKHN0eWxlRWxlbWVudC5maXJzdENoaWxkKTtcbiAgICB9XG4gICAgc3R5bGVFbGVtZW50LmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGNzcykpO1xuICB9XG59XG5tb2R1bGUuZXhwb3J0cyA9IHN0eWxlVGFnVHJhbnNmb3JtOyIsIi8vIFRoZSBtb2R1bGUgY2FjaGVcbnZhciBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18gPSB7fTtcblxuLy8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbmZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG5cdHZhciBjYWNoZWRNb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdO1xuXHRpZiAoY2FjaGVkTW9kdWxlICE9PSB1bmRlZmluZWQpIHtcblx0XHRyZXR1cm4gY2FjaGVkTW9kdWxlLmV4cG9ydHM7XG5cdH1cblx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcblx0dmFyIG1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF0gPSB7XG5cdFx0aWQ6IG1vZHVsZUlkLFxuXHRcdC8vIG5vIG1vZHVsZS5sb2FkZWQgbmVlZGVkXG5cdFx0ZXhwb3J0czoge31cblx0fTtcblxuXHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cblx0X193ZWJwYWNrX21vZHVsZXNfX1ttb2R1bGVJZF0obW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cblx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcblx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xufVxuXG4iLCIvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuX193ZWJwYWNrX3JlcXVpcmVfXy5uID0gKG1vZHVsZSkgPT4ge1xuXHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cblx0XHQoKSA9PiAobW9kdWxlWydkZWZhdWx0J10pIDpcblx0XHQoKSA9PiAobW9kdWxlKTtcblx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgeyBhOiBnZXR0ZXIgfSk7XG5cdHJldHVybiBnZXR0ZXI7XG59OyIsIi8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb25zIGZvciBoYXJtb255IGV4cG9ydHNcbl9fd2VicGFja19yZXF1aXJlX18uZCA9IChleHBvcnRzLCBkZWZpbml0aW9uKSA9PiB7XG5cdGZvcih2YXIga2V5IGluIGRlZmluaXRpb24pIHtcblx0XHRpZihfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZGVmaW5pdGlvbiwga2V5KSAmJiAhX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIGtleSkpIHtcblx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBrZXksIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBkZWZpbml0aW9uW2tleV0gfSk7XG5cdFx0fVxuXHR9XG59OyIsIl9fd2VicGFja19yZXF1aXJlX18ubyA9IChvYmosIHByb3ApID0+IChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBwcm9wKSkiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLm5jID0gdW5kZWZpbmVkOyIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9zdHlsZS5jc3NcIjtcbiAgICAgIFxuICAgICAgXG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0gPSBzdHlsZVRhZ1RyYW5zZm9ybUZuO1xub3B0aW9ucy5zZXRBdHRyaWJ1dGVzID0gc2V0QXR0cmlidXRlcztcbm9wdGlvbnMuaW5zZXJ0ID0gaW5zZXJ0Rm4uYmluZChudWxsLCBcImhlYWRcIik7XG5vcHRpb25zLmRvbUFQSSA9IGRvbUFQSTtcbm9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50ID0gaW5zZXJ0U3R5bGVFbGVtZW50O1xuXG52YXIgdXBkYXRlID0gQVBJKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0ICogZnJvbSBcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9zdHlsZS5jc3NcIjtcbiAgICAgICBleHBvcnQgZGVmYXVsdCBjb250ZW50ICYmIGNvbnRlbnQubG9jYWxzID8gY29udGVudC5sb2NhbHMgOiB1bmRlZmluZWQ7XG4iLCJleHBvcnQgZnVuY3Rpb24gU2hpcChsZW5ndGgpe1xyXG4gICAgbGV0IGhpdHMgPSAwO1xyXG4gICAgbGV0IHN1bmsgPSBmYWxzZTtcclxuICBcclxuICAgIGZ1bmN0aW9uIGhpdCgpIHtcclxuICAgICAgaGl0cysrO1xyXG4gICAgICBpZiAoaGl0cyA9PT0gbGVuZ3RoKSB7XHJcbiAgICAgICAgc3VuayA9IHRydWU7XHJcbiAgICAgICAgcmV0dXJuIHRydWVcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIFxyXG4gICAgZnVuY3Rpb24gaXNTdW5rKCkge1xyXG4gICAgICByZXR1cm4gc3VuaztcclxuICAgIH1cclxuICBcclxuICAgIHJldHVybiB7XHJcbiAgICAgIGxlbmd0aCxcclxuICAgICAgaGl0LFxyXG4gICAgICBpc1N1bmtcclxuICAgIH07XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBHYW1lYm9hcmQoKXtcclxuICAgIGxldCBib2FyZCA9IEFycmF5KDkpLmZpbGwoKS5tYXAoKCkgPT4gQXJyYXkoOSkuZmlsbCgwKSk7IFxyXG5cclxuICAgIGZ1bmN0aW9uIHBsYWNlU2hpcCh4LHksbGVuLGFsaWdubWVudCl7XHJcbiAgICAgICAgeCA9IHBhcnNlSW50KHgpXHJcbiAgICAgICAgeSA9IHBhcnNlSW50KHkpXHJcbiAgICAgICAgbGVuID0gcGFyc2VJbnQobGVuKVxyXG4gICAgICAgIGlmICh4PjkgfHwgeSA+OSB8fCB4PDAgfHwgeTwwKSByZXR1cm4gZmFsc2VcclxuXHJcbiAgICAgICAgaWYoYWxpZ25tZW50PT09J3ZlcnRpY2FsJyl7XHJcbiAgICAgICAgICAgIGlmKHkrbGVuID4gOSkgcmV0dXJuIGZhbHNlXHJcbiAgICAgICAgfSBlbHNlIGlmIChhbGlnbm1lbnQ9PT0naG9yaXpvbnRhbCcpIHtcclxuICAgICAgICAgICAgaWYoeCtsZW4gPiA5KSByZXR1cm4gZmFsc2VcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGlmIChib2FyZFt4XVt5XSAhPSAwKSByZXR1cm4gZmFsc2VcclxuICAgICAgICBpZiAoYWxpZ25tZW50PT09J3ZlcnRpY2FsJyl7XHJcbiAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDw9IGxlbi0xOyBpKyspIHtcclxuICAgICAgICAgICAgICAgIGlmIChib2FyZFt4K2ldW3ldICE9IDApIHJldHVybiBmYWxzZVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSBlbHNlIGlmIChhbGlnbm1lbnQ9PT0naG9yaXpvbnRhbCcpIHtcclxuICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPD0gbGVuLTE7IGkrKykge1xyXG4gICAgICAgICAgICAgICAgaWYgKGJvYXJkW3hdW3kraV0gIT0gMCkgcmV0dXJuIGZhbHNlXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGJvYXJkW3hdW3ldID0gJ3NoaXAnXHJcbiAgICAgICAgaWYgKGFsaWdubWVudD09PSd2ZXJ0aWNhbCcpe1xyXG4gICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8PSBsZW4tMTsgaSsrKSB7XHJcbiAgICAgICAgICAgICAgICBib2FyZFt4K2ldW3ldID0gJ3NoaXAnXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9IGVsc2UgaWYgKGFsaWdubWVudD09PSdob3Jpem9udGFsJykge1xyXG4gICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8PSBsZW4tMTsgaSsrKSB7XHJcbiAgICAgICAgICAgICAgICBib2FyZFt4XVt5K2ldID0gJ3NoaXAnXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIHRydWVcclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiByZWNlaXZlQXR0YWNrKHgseSl7XHJcbiAgICAgICAgaWYgKGJvYXJkW3hdW3ldID09PSAnbWlzc2VkJyB8fCBib2FyZFt4XVt5XSA9PT0gJ2hpdCcpXHJcbiAgICAgICAgICAgIHJldHVyblxyXG4gICAgICAgIGlmKGJvYXJkW3hdW3ldID09PSAnc2hpcCcpe1xyXG4gICAgICAgICAgICBib2FyZFt4XVt5XSA9ICdoaXQnXHJcbiAgICAgICAgICAgIHJldHVybiAnaGl0J1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIGJvYXJkW3hdW3ldID0gJ21pc3NlZCdcclxuICAgICAgICAgICAgcmV0dXJuICdtaXNzZWQnXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIGFsbFNoaXBTdW5rKCl7XHJcbiAgICAgICAgbGV0IGFsbFN1bmsgPSB0cnVlXHJcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCA5OyBpKyspIHtcclxuICAgICAgICAgICAgaWYgKGJvYXJkW2ldLmluY2x1ZGVzKCdzaGlwJykpe1xyXG4gICAgICAgICAgICAgICAgYWxsU3VuayA9IGZhbHNlXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIGFsbFN1bms7XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIHtib2FyZCwgcGxhY2VTaGlwLCByZWNlaXZlQXR0YWNrLCBhbGxTaGlwU3Vua31cclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIFBsYXllcigpe1xyXG4gICAgYm9hcmQgPSBHYW1lYm9hcmQoKVxyXG5cclxuICAgIHJldHVybiB7Ym9hcmR9XHJcbn0iLCJpbXBvcnQgJy4vc3R5bGUuY3NzJ1xyXG5pbXBvcnQgeyBTaGlwLCBHYW1lYm9hcmQsIFBsYXllciB9IGZyb20gJy4vbG9naWMnO1xyXG5cclxuY29uc3Qgc2V0VGhlbWUgPSAoZnVuY3Rpb24gKCkge1xyXG4gICAgY29uc3Qgcm9vdCA9IGRvY3VtZW50LmRvY3VtZW50RWxlbWVudDtcclxuICAgIGNvbnN0IEJ0biA9IHJvb3QucXVlcnlTZWxlY3RvcihcIi50dFwiKTtcclxuICAgIHJldHVybiBmdW5jdGlvbigpe1xyXG4gICAgICAgIHJvb3QuY2xhc3NOYW1lID09PSAnZGFyaycgPyByb290LnJlbW92ZUF0dHJpYnV0ZSgnY2xhc3MnKSA6IHJvb3QuY2xhc3NOYW1lID0gJ2RhcmsnO1xyXG4gICAgICAgIEJ0bi50ZXh0Q29udGVudCA9PSBcIuKYgO+4j1wiID8gQnRuLnRleHRDb250ZW50ID1cIvCfjJlcIiA6IEJ0bi50ZXh0Q29udGVudCA9XCLimIDvuI9cIlxyXG4gICAgfVxyXG59KSgpO1xyXG5kb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcudHQnKS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHNldFRoZW1lKVxyXG5cclxuY29uc3QgaGVhZGVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignaGVhZGVyJyk7XHJcbmNvbnN0IG1haW4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdtYWluJylcclxubWFpbi50ZXh0Q29udGVudCA9IFwiXCJcclxuY29uc3Qgc3RhdHVzID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jylcclxuc3RhdHVzLmNsYXNzTGlzdC5hZGQoJ3N0YXR1cycpXHJcbnN0YXR1cy50ZXh0Q29udGVudCA9ICdQbGFjZSB5b3VyIGNhcmllciEgKFNpemUgaXMgNSknXHJcbmhlYWRlci5wYXJlbnROb2RlLmluc2VydEJlZm9yZShzdGF0dXMsIG1haW4pO1xyXG5cclxubGV0IHBsYXllclNoaXBzID0gW11cclxubGV0IGNvbXB1dGVyU2hpcHMgPSBbXVxyXG5cclxuY29uc3QgY2FyaWVyID0gU2hpcCg1KVxyXG5jb25zdCBjb21tYW5kZXIgPSBTaGlwKDQpXHJcbmNvbnN0IGFzc2F1bHQgPSBTaGlwKDMpXHJcbmNvbnN0IGNydWlzZXIgPSBTaGlwKDIpXHJcbmNvbnN0IGZyaWdhdGUgPSBTaGlwKDEpXHJcbnBsYXllclNoaXBzLnB1c2goY2FyaWVyLCBjb21tYW5kZXIsIGFzc2F1bHQsIGNydWlzZXIsIGZyaWdhdGUpXHJcbmNvbXB1dGVyU2hpcHMucHVzaChjYXJpZXIsIGNvbW1hbmRlciwgYXNzYXVsdCwgY3J1aXNlciwgZnJpZ2F0ZSlcclxuXHJcbmNvbnN0IHBsYXllckJvYXJkQ29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2JylcclxucGxheWVyQm9hcmRDb250YWluZXIuY2xhc3NMaXN0LmFkZCgnYm9hcmRDb250YWluZXInLCAncGxheWVyJylcclxucGxheWVyQm9hcmRDb250YWluZXIudGV4dENvbnRlbnQgPSBcIlBMQVlFUlwiXHJcblxyXG4vLyBjb25zdCBmb2dPZldhciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpXHJcbi8vIGZvZ09mV2FyLmNsYXNzTGlzdC5hZGQoJ2ZvZ09mV2FyJylcclxuLy8gZm9nT2ZXYXIudGV4dENvbnRlbnQgPSAnRk9HIE9GIFdBUidcclxuXHJcbmNvbnN0IGNvbXB1dGVyQm9hcmRDb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKVxyXG5jb21wdXRlckJvYXJkQ29udGFpbmVyLmNsYXNzTGlzdC5hZGQoJ2JvYXJkQ29udGFpbmVyJywgJ2NvbXB1dGVyJylcclxuY29tcHV0ZXJCb2FyZENvbnRhaW5lci50ZXh0Q29udGVudCA9IFwiQ09NUFVURVJcIlxyXG5cclxuY29uc3QgcGxheWVyQm9hcmQgPSBHYW1lYm9hcmQoKTtcclxucGxheWVyQm9hcmQucGxhY2VTaGlwKDYsNiwzLFwiaG9yaXpvbnRhbFwiKVxyXG4vLyBjb25zb2xlLmxvZyhwbGF5ZXJCb2FyZC5ib2FyZClcclxuY29uc3QgcGxheWVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2JylcclxucGxheWVyLmNsYXNzTGlzdC5hZGQoJ2JvYXJkJylcclxucGxheWVyQm9hcmQuYm9hcmQuZm9yRWFjaCgoaXRlbSxpKSA9PiB7XHJcbiAgICBpdGVtLmZvckVhY2goKGNlbGwsaikgPT4ge1xyXG4gICAgICAgIGNvbnN0IGRpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpXHJcbiAgICAgICAgZGl2LnNldEF0dHJpYnV0ZShcInhcIixpKVxyXG4gICAgICAgIGRpdi5zZXRBdHRyaWJ1dGUoXCJ5XCIsailcclxuICAgICAgICAvLyBkaXYudGV4dENvbnRlbnQgPSBjZWxsXHJcbiAgICAgICAgaWYgKGNlbGwgPT09ICdzaGlwJykgZGl2LmNsYXNzTGlzdC5hZGQoJ3NoaXAnKVxyXG4gICAgICAgIHBsYXllci5hcHBlbmRDaGlsZChkaXYpXHJcbiAgICB9KVxyXG59KVxyXG5cclxuY29uc3QgY29tcHV0ZXJCb2FyZCA9IEdhbWVib2FyZCgpO1xyXG5jb21wdXRlckJvYXJkLnBsYWNlU2hpcCg1LDUsMyxcInZlcnRpY2FsXCIpXHJcbi8vIGNvbnNvbGUubG9nKGNvbXB1dGVyQm9hcmQuYm9hcmQpXHJcbmNvbnN0IGNvbXB1dGVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2JylcclxuY29tcHV0ZXIuY2xhc3NMaXN0LmFkZCgnYm9hcmQnKVxyXG5jb21wdXRlckJvYXJkLmJvYXJkLmZvckVhY2goKGl0ZW0saSkgPT4ge1xyXG4gICAgaXRlbS5mb3JFYWNoKChjZWxsLGopID0+IHtcclxuICAgICAgICBjb25zdCBkaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKVxyXG4gICAgICAgIGRpdi5zZXRBdHRyaWJ1dGUoXCJ4XCIsaSlcclxuICAgICAgICBkaXYuc2V0QXR0cmlidXRlKFwieVwiLGopXHJcbiAgICAgICAgLy8gZGl2LnRleHRDb250ZW50ID0gY2VsbFxyXG4gICAgICAgIGRpdi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHBsYXllck1vdmUpXHJcbiAgICAgICAgY29tcHV0ZXIuYXBwZW5kQ2hpbGQoZGl2KVxyXG4gICAgfSlcclxufSlcclxuXHJcbmZ1bmN0aW9uIHBsYXllck1vdmUoZSl7XHJcbiAgICBjb25zdCByZXN1bHQgPSBjb21wdXRlckJvYXJkLnJlY2VpdmVBdHRhY2soZS50YXJnZXQuYXR0cmlidXRlcy54LnZhbHVlLCBlLnRhcmdldC5hdHRyaWJ1dGVzLnkudmFsdWUpXHJcbiAgICAvLyBlLnRhcmdldC50ZXh0Q29udGVudCA9IHJlc3VsdFxyXG4gICAgLy8gY29uc29sZS5sb2cocGxheWVyQm9hcmQuYm9hcmQpXHJcbiAgICBpZiAocmVzdWx0ID09PSAnaGl0JyB8fCByZXN1bHQgPT09ICdtaXNzZWQnKSB7XHJcbiAgICAgICAgaWYgKHJlc3VsdCA9PT0gJ2hpdCcpIGUudGFyZ2V0LmNsYXNzTGlzdC5hZGQoJ2hpdCcpXHJcbiAgICAgICAgaWYgKHJlc3VsdCA9PT0gJ21pc3NlZCcpIGUudGFyZ2V0LmNsYXNzTGlzdC5hZGQoJ21pc3NlZCcpXHJcbiAgICAgICAgaWYgKGNvbXB1dGVyQm9hcmQuYWxsU2hpcFN1bmsoKSA9PT0gdHJ1ZSl7XHJcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiUGxheWVyIHdpbnNcIilcclxuICAgICAgICAgICAgZmluaXNoR2FtZShcIlBsYXllclwiKVxyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIGNvbXB1dGVyTW92ZSgpXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcblxyXG5mdW5jdGlvbiBjb21wdXRlck1vdmUoKXtcclxuICAgIGNvbnN0IHggPSBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAoOCAtIDAgKyAxKSkgKyAwXHJcbiAgICBjb25zdCB5ID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogKDggLSAwICsgMSkpICsgMFxyXG4gICAgY29uc3QgcmVzdWx0ID0gcGxheWVyQm9hcmQucmVjZWl2ZUF0dGFjayh4LCB5KVxyXG4gICAgaWYgKHJlc3VsdCA9PT0gJ2hpdCcgfHwgcmVzdWx0ID09PSAnbWlzc2VkJykge1xyXG4gICAgICAgIGlmIChyZXN1bHQgPT09ICdoaXQnKSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGBkaXZbeD1cIiR7eH1cIl1beT1cIiR7eX1cIl1gKS5jbGFzc0xpc3QuYWRkKCdoaXQnKVxyXG4gICAgICAgIGlmIChyZXN1bHQgPT09ICdtaXNzZWQnKSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGBkaXZbeD1cIiR7eH1cIl1beT1cIiR7eX1cIl1gKS5jbGFzc0xpc3QuYWRkKCdtaXNzZWQnKVxyXG4gICAgICAgIGlmIChwbGF5ZXJCb2FyZC5hbGxTaGlwU3VuaygpID09PSB0cnVlKSB7XHJcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiQ29tcHV0ZXIgd2luc1wiKVxyXG4gICAgICAgICAgICBmaW5pc2hHYW1lKFwiQ29tcHV0ZXJcIilcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIHJlc3VsdFxyXG4gICAgfSBlbHNlIHtcclxuICAgICAgICBjb21wdXRlck1vdmUoKVxyXG4gICAgfVxyXG59XHJcblxyXG5mdW5jdGlvbiBmaW5pc2hHYW1lKHdpbm5lcil7XHJcbiAgICBtYWluLnRleHRDb250ZW50ID0gYCR7d2lubmVyfSB3aW5zIWBcclxuICAgIHN0YXR1cy50ZXh0Q29udGVudCA9IGBgXHJcbiAgICBtYWluLnN0eWxlLmZvbnRTaXplID0gXCIzcmVtXCJcclxufVxyXG5cclxucGxheWVyQm9hcmRDb250YWluZXIuYXBwZW5kQ2hpbGQocGxheWVyKVxyXG5jb21wdXRlckJvYXJkQ29udGFpbmVyLmFwcGVuZENoaWxkKGNvbXB1dGVyKVxyXG5tYWluLmFwcGVuZENoaWxkKHBsYXllckJvYXJkQ29udGFpbmVyKVxyXG4vLyBtYWluLmFwcGVuZENoaWxkKGZvZ09mV2FyKVxyXG5tYWluLmFwcGVuZENoaWxkKGNvbXB1dGVyQm9hcmRDb250YWluZXIpXHJcblxyXG5cclxuXHJcblxyXG4iXSwibmFtZXMiOlsiX19fQ1NTX0xPQURFUl9FWFBPUlRfX18iLCJwdXNoIiwibW9kdWxlIiwiaWQiLCJleHBvcnRzIiwiY3NzV2l0aE1hcHBpbmdUb1N0cmluZyIsImxpc3QiLCJ0b1N0cmluZyIsInRoaXMiLCJtYXAiLCJpdGVtIiwiY29udGVudCIsIm5lZWRMYXllciIsImNvbmNhdCIsImxlbmd0aCIsImpvaW4iLCJpIiwibW9kdWxlcyIsIm1lZGlhIiwiZGVkdXBlIiwic3VwcG9ydHMiLCJsYXllciIsInVuZGVmaW5lZCIsImFscmVhZHlJbXBvcnRlZE1vZHVsZXMiLCJrIiwiX2siLCJjc3NNYXBwaW5nIiwiYnRvYSIsImJhc2U2NCIsInVuZXNjYXBlIiwiZW5jb2RlVVJJQ29tcG9uZW50IiwiSlNPTiIsInN0cmluZ2lmeSIsImRhdGEiLCJzb3VyY2VNYXBwaW5nIiwic3R5bGVzSW5ET00iLCJnZXRJbmRleEJ5SWRlbnRpZmllciIsImlkZW50aWZpZXIiLCJyZXN1bHQiLCJtb2R1bGVzVG9Eb20iLCJvcHRpb25zIiwiaWRDb3VudE1hcCIsImlkZW50aWZpZXJzIiwiYmFzZSIsImNvdW50IiwiaW5kZXhCeUlkZW50aWZpZXIiLCJvYmoiLCJjc3MiLCJzb3VyY2VNYXAiLCJyZWZlcmVuY2VzIiwidXBkYXRlciIsImFkZEVsZW1lbnRTdHlsZSIsImJ5SW5kZXgiLCJzcGxpY2UiLCJhcGkiLCJkb21BUEkiLCJ1cGRhdGUiLCJuZXdPYmoiLCJyZW1vdmUiLCJsYXN0SWRlbnRpZmllcnMiLCJuZXdMaXN0IiwiaW5kZXgiLCJuZXdMYXN0SWRlbnRpZmllcnMiLCJfaSIsIl9pbmRleCIsIm1lbW8iLCJpbnNlcnQiLCJzdHlsZSIsInRhcmdldCIsInN0eWxlVGFyZ2V0IiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwid2luZG93IiwiSFRNTElGcmFtZUVsZW1lbnQiLCJjb250ZW50RG9jdW1lbnQiLCJoZWFkIiwiZSIsImdldFRhcmdldCIsIkVycm9yIiwiYXBwZW5kQ2hpbGQiLCJlbGVtZW50IiwiY3JlYXRlRWxlbWVudCIsInNldEF0dHJpYnV0ZXMiLCJhdHRyaWJ1dGVzIiwic3R5bGVFbGVtZW50Iiwibm9uY2UiLCJzZXRBdHRyaWJ1dGUiLCJpbnNlcnRTdHlsZUVsZW1lbnQiLCJzdHlsZVRhZ1RyYW5zZm9ybSIsImFwcGx5IiwicGFyZW50Tm9kZSIsInJlbW92ZUNoaWxkIiwicmVtb3ZlU3R5bGVFbGVtZW50Iiwic3R5bGVTaGVldCIsImNzc1RleHQiLCJmaXJzdENoaWxkIiwiY3JlYXRlVGV4dE5vZGUiLCJfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18iLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwibW9kdWxlSWQiLCJjYWNoZWRNb2R1bGUiLCJfX3dlYnBhY2tfbW9kdWxlc19fIiwibiIsImdldHRlciIsIl9fZXNNb2R1bGUiLCJkIiwiYSIsImRlZmluaXRpb24iLCJrZXkiLCJvIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiZ2V0IiwicHJvcCIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsIm5jIiwiU2hpcCIsImhpdHMiLCJzdW5rIiwiaGl0IiwiaXNTdW5rIiwiR2FtZWJvYXJkIiwiYm9hcmQiLCJBcnJheSIsImZpbGwiLCJwbGFjZVNoaXAiLCJ4IiwieSIsImxlbiIsImFsaWdubWVudCIsInBhcnNlSW50IiwicmVjZWl2ZUF0dGFjayIsImFsbFNoaXBTdW5rIiwiYWxsU3VuayIsImluY2x1ZGVzIiwibG9jYWxzIiwic2V0VGhlbWUiLCJyb290IiwiZG9jdW1lbnRFbGVtZW50IiwiQnRuIiwiY2xhc3NOYW1lIiwicmVtb3ZlQXR0cmlidXRlIiwidGV4dENvbnRlbnQiLCJhZGRFdmVudExpc3RlbmVyIiwiaGVhZGVyIiwibWFpbiIsImNsYXNzTGlzdCIsImFkZCIsImluc2VydEJlZm9yZSIsImNhcmllciIsImNvbW1hbmRlciIsImFzc2F1bHQiLCJjcnVpc2VyIiwiZnJpZ2F0ZSIsInBsYXllckJvYXJkQ29udGFpbmVyIiwiY29tcHV0ZXJCb2FyZENvbnRhaW5lciIsInBsYXllckJvYXJkIiwicGxheWVyIiwiZm9yRWFjaCIsImNlbGwiLCJqIiwiZGl2IiwiY29tcHV0ZXJCb2FyZCIsImNvbXB1dGVyIiwicGxheWVyTW92ZSIsInZhbHVlIiwiY29uc29sZSIsImxvZyIsImZpbmlzaEdhbWUiLCJjb21wdXRlck1vdmUiLCJNYXRoIiwiZmxvb3IiLCJyYW5kb20iLCJ3aW5uZXIiLCJmb250U2l6ZSJdLCJzb3VyY2VSb290IjoiIn0=