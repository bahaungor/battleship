(()=>{"use strict";var n={208:(n,r,e)=>{e.d(r,{A:()=>A});var t=e(354),o=e.n(t),a=e(314),i=e.n(a)()(o());i.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Jost:ital,wght@0,100..900;1,100..900&display=swap);"]),i.push([n.id,'html{\n    font-family: Jost, sans-serif;\n}\n\n:root.dark {\n    --border: 1px solid whitesmoke;\n    --bg: rgb(0, 0, 0);\n    --bg2: rgb(29, 29, 29);\n    --bg3: rgb(39, 39, 39);\n    --text: white;\n    --lightgray: #f0eef1;\n    --green: rgb(105, 247, 105);\n    --red: rgb(255, 118, 118);\n    --navy: rgb(21, 101, 192);\n    --blue: rgb(33, 150, 243);\n    --navyToBlue: linear-gradient(to right, var(--navy), var(--blue));\n    --shadow: 0px 2px 2px lightgray;\n    --gray: rgb(94, 94, 94);\n    --font: \'Jost\', sans-serif;\n}\n:root {\n    --border: 1px solid black;\n    --bg: rgb(255, 255, 255);\n    --bg2: rgb(250, 250, 250);\n    --bg3: rgb(245, 245, 245);\n    --text: black;\n    --lightgray: #f0eef1;\n    --green: rgb(105, 247, 105);\n    --red: rgb(255, 118, 118);\n    --navy: rgb(21, 101, 192);\n    --blue: rgb(33, 150, 243);\n    --navyToBlue: linear-gradient(to right, var(--navy), var(--blue));\n    --shadow: 0px 2px 2px lightgray;\n    --gray: rgb(94, 94, 94);\n    --font: \'Jost\', sans-serif;\n}\nbody{\n    font-family: var(--font);\n    background-color: var(--bg);\n    color: var(--text);\n    display: flex;\n    flex-direction: column;\n    min-height: 100vh;\n}\n#root{\n    display: flex;\n    flex-direction: column;\n    min-height: 100vh;\n}\n/*CSS RESET*/\n*,\n*::before,\n*::after{\n    box-sizing: border-box;\n    padding: 0;\n    margin: 0;\n}\n\n/*CSS FORM RESET*/\ninput, textarea, select, button, meter, progress{\n    margin: 0;\n    padding: 0;\n    border: none;\n    outline: none; \n    box-sizing: border-box; \n    background-color: transparent;\n    font-family: inherit; \n}\nbutton, input[type="submit"], input[type="button"] {\n    cursor: pointer;\n    background-color: transparent;\n}\ninput[type="checkbox"], input[type="radio"] {\n    vertical-align: middle;\n}\nselect {\n    appearance: none;\n    background-image: none;\n}\ntextarea {\n    resize: vertical;\n}\n\nlabel, form, button, input{\n    display: block;\n}\n\ninput::-webkit-outer-spin-button,\ninput::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n    margin: 0;\n}\ninput[type=number]{\n    appearance: textfield;\n    -moz-appearance: textfield;\n}\n\n.tt{\n    cursor: pointer;\n    font-size: 1.5rem;\n    position: absolute;\n    right: 20px;\n}\n\nheader{\n    padding: 10px;\n    font-family: var(--font);\n    border-bottom: var(--border);\n    background-color: var(--bg2);\n    font-size: 2rem;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}\n.header{\n    font-weight: 700;\n    text-decoration: none;\n    color: inherit;\n}\nheader img{\n    width: 80px;\n}\n\nmain{\n    flex: 1;\n    padding: 40px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    gap: 50px;\n}\n\n.board{\n    display: grid;\n    grid-template-columns: repeat(9, 30px);\n}\n\n.board div{\n    width: 30px;\n    height: 30px;\n    border: 1px solid black;\n}\n\nfooter{\n    text-align: center;\n    padding: 10px;\n    font-size: 1.2rem;\n    border-top: var(--border);\n    background-color: var(--bg2);\n}\n',"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAEA;IACI,6BAA6B;AACjC;;AAEA;IACI,8BAA8B;IAC9B,kBAAkB;IAClB,sBAAsB;IACtB,sBAAsB;IACtB,aAAa;IACb,oBAAoB;IACpB,2BAA2B;IAC3B,yBAAyB;IACzB,yBAAyB;IACzB,yBAAyB;IACzB,iEAAiE;IACjE,+BAA+B;IAC/B,uBAAuB;IACvB,0BAA0B;AAC9B;AACA;IACI,yBAAyB;IACzB,wBAAwB;IACxB,yBAAyB;IACzB,yBAAyB;IACzB,aAAa;IACb,oBAAoB;IACpB,2BAA2B;IAC3B,yBAAyB;IACzB,yBAAyB;IACzB,yBAAyB;IACzB,iEAAiE;IACjE,+BAA+B;IAC/B,uBAAuB;IACvB,0BAA0B;AAC9B;AACA;IACI,wBAAwB;IACxB,2BAA2B;IAC3B,kBAAkB;IAClB,aAAa;IACb,sBAAsB;IACtB,iBAAiB;AACrB;AACA;IACI,aAAa;IACb,sBAAsB;IACtB,iBAAiB;AACrB;AACA,YAAY;AACZ;;;IAGI,sBAAsB;IACtB,UAAU;IACV,SAAS;AACb;;AAEA,iBAAiB;AACjB;IACI,SAAS;IACT,UAAU;IACV,YAAY;IACZ,aAAa;IACb,sBAAsB;IACtB,6BAA6B;IAC7B,oBAAoB;AACxB;AACA;IACI,eAAe;IACf,6BAA6B;AACjC;AACA;IACI,sBAAsB;AAC1B;AACA;IACI,gBAAgB;IAChB,sBAAsB;AAC1B;AACA;IACI,gBAAgB;AACpB;;AAEA;IACI,cAAc;AAClB;;AAEA;;IAEI,wBAAwB;IACxB,SAAS;AACb;AACA;IACI,qBAAqB;IACrB,0BAA0B;AAC9B;;AAEA;IACI,eAAe;IACf,iBAAiB;IACjB,kBAAkB;IAClB,WAAW;AACf;;AAEA;IACI,aAAa;IACb,wBAAwB;IACxB,4BAA4B;IAC5B,4BAA4B;IAC5B,eAAe;IACf,aAAa;IACb,mBAAmB;IACnB,uBAAuB;AAC3B;AACA;IACI,gBAAgB;IAChB,qBAAqB;IACrB,cAAc;AAClB;AACA;IACI,WAAW;AACf;;AAEA;IACI,OAAO;IACP,aAAa;IACb,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,SAAS;AACb;;AAEA;IACI,aAAa;IACb,sCAAsC;AAC1C;;AAEA;IACI,WAAW;IACX,YAAY;IACZ,uBAAuB;AAC3B;;AAEA;IACI,kBAAkB;IAClB,aAAa;IACb,iBAAiB;IACjB,yBAAyB;IACzB,4BAA4B;AAChC",sourcesContent:['@import url(\'https://fonts.googleapis.com/css2?family=Jost:ital,wght@0,100..900;1,100..900&display=swap\');\r\n\r\nhtml{\r\n    font-family: Jost, sans-serif;\r\n}\r\n\r\n:root.dark {\r\n    --border: 1px solid whitesmoke;\r\n    --bg: rgb(0, 0, 0);\r\n    --bg2: rgb(29, 29, 29);\r\n    --bg3: rgb(39, 39, 39);\r\n    --text: white;\r\n    --lightgray: #f0eef1;\r\n    --green: rgb(105, 247, 105);\r\n    --red: rgb(255, 118, 118);\r\n    --navy: rgb(21, 101, 192);\r\n    --blue: rgb(33, 150, 243);\r\n    --navyToBlue: linear-gradient(to right, var(--navy), var(--blue));\r\n    --shadow: 0px 2px 2px lightgray;\r\n    --gray: rgb(94, 94, 94);\r\n    --font: \'Jost\', sans-serif;\r\n}\r\n:root {\r\n    --border: 1px solid black;\r\n    --bg: rgb(255, 255, 255);\r\n    --bg2: rgb(250, 250, 250);\r\n    --bg3: rgb(245, 245, 245);\r\n    --text: black;\r\n    --lightgray: #f0eef1;\r\n    --green: rgb(105, 247, 105);\r\n    --red: rgb(255, 118, 118);\r\n    --navy: rgb(21, 101, 192);\r\n    --blue: rgb(33, 150, 243);\r\n    --navyToBlue: linear-gradient(to right, var(--navy), var(--blue));\r\n    --shadow: 0px 2px 2px lightgray;\r\n    --gray: rgb(94, 94, 94);\r\n    --font: \'Jost\', sans-serif;\r\n}\r\nbody{\r\n    font-family: var(--font);\r\n    background-color: var(--bg);\r\n    color: var(--text);\r\n    display: flex;\r\n    flex-direction: column;\r\n    min-height: 100vh;\r\n}\r\n#root{\r\n    display: flex;\r\n    flex-direction: column;\r\n    min-height: 100vh;\r\n}\r\n/*CSS RESET*/\r\n*,\r\n*::before,\r\n*::after{\r\n    box-sizing: border-box;\r\n    padding: 0;\r\n    margin: 0;\r\n}\r\n\r\n/*CSS FORM RESET*/\r\ninput, textarea, select, button, meter, progress{\r\n    margin: 0;\r\n    padding: 0;\r\n    border: none;\r\n    outline: none; \r\n    box-sizing: border-box; \r\n    background-color: transparent;\r\n    font-family: inherit; \r\n}\r\nbutton, input[type="submit"], input[type="button"] {\r\n    cursor: pointer;\r\n    background-color: transparent;\r\n}\r\ninput[type="checkbox"], input[type="radio"] {\r\n    vertical-align: middle;\r\n}\r\nselect {\r\n    appearance: none;\r\n    background-image: none;\r\n}\r\ntextarea {\r\n    resize: vertical;\r\n}\r\n\r\nlabel, form, button, input{\r\n    display: block;\r\n}\r\n\r\ninput::-webkit-outer-spin-button,\r\ninput::-webkit-inner-spin-button {\r\n    -webkit-appearance: none;\r\n    margin: 0;\r\n}\r\ninput[type=number]{\r\n    appearance: textfield;\r\n    -moz-appearance: textfield;\r\n}\r\n\r\n.tt{\r\n    cursor: pointer;\r\n    font-size: 1.5rem;\r\n    position: absolute;\r\n    right: 20px;\r\n}\r\n\r\nheader{\r\n    padding: 10px;\r\n    font-family: var(--font);\r\n    border-bottom: var(--border);\r\n    background-color: var(--bg2);\r\n    font-size: 2rem;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n}\r\n.header{\r\n    font-weight: 700;\r\n    text-decoration: none;\r\n    color: inherit;\r\n}\r\nheader img{\r\n    width: 80px;\r\n}\r\n\r\nmain{\r\n    flex: 1;\r\n    padding: 40px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    gap: 50px;\r\n}\r\n\r\n.board{\r\n    display: grid;\r\n    grid-template-columns: repeat(9, 30px);\r\n}\r\n\r\n.board div{\r\n    width: 30px;\r\n    height: 30px;\r\n    border: 1px solid black;\r\n}\r\n\r\nfooter{\r\n    text-align: center;\r\n    padding: 10px;\r\n    font-size: 1.2rem;\r\n    border-top: var(--border);\r\n    background-color: var(--bg2);\r\n}\r\n'],sourceRoot:""}]);const A=i},314:n=>{n.exports=function(n){var r=[];return r.toString=function(){return this.map((function(r){var e="",t=void 0!==r[5];return r[4]&&(e+="@supports (".concat(r[4],") {")),r[2]&&(e+="@media ".concat(r[2]," {")),t&&(e+="@layer".concat(r[5].length>0?" ".concat(r[5]):""," {")),e+=n(r),t&&(e+="}"),r[2]&&(e+="}"),r[4]&&(e+="}"),e})).join("")},r.i=function(n,e,t,o,a){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(t)for(var A=0;A<this.length;A++){var s=this[A][0];null!=s&&(i[s]=!0)}for(var c=0;c<n.length;c++){var l=[].concat(n[c]);t&&i[l[0]]||(void 0!==a&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=a),e&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=e):l[2]=e),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),r.push(l))}},r}},354:n=>{n.exports=function(n){var r=n[1],e=n[3];if(!e)return r;if("function"==typeof btoa){var t=btoa(unescape(encodeURIComponent(JSON.stringify(e)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(t),a="/*# ".concat(o," */");return[r].concat([a]).join("\n")}return[r].join("\n")}},72:n=>{var r=[];function e(n){for(var e=-1,t=0;t<r.length;t++)if(r[t].identifier===n){e=t;break}return e}function t(n,t){for(var a={},i=[],A=0;A<n.length;A++){var s=n[A],c=t.base?s[0]+t.base:s[0],l=a[c]||0,p="".concat(c," ").concat(l);a[c]=l+1;var u=e(p),d={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==u)r[u].references++,r[u].updater(d);else{var b=o(d,t);t.byIndex=A,r.splice(A,0,{identifier:p,updater:b,references:1})}i.push(p)}return i}function o(n,r){var e=r.domAPI(r);return e.update(n),function(r){if(r){if(r.css===n.css&&r.media===n.media&&r.sourceMap===n.sourceMap&&r.supports===n.supports&&r.layer===n.layer)return;e.update(n=r)}else e.remove()}}n.exports=function(n,o){var a=t(n=n||[],o=o||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var A=e(a[i]);r[A].references--}for(var s=t(n,o),c=0;c<a.length;c++){var l=e(a[c]);0===r[l].references&&(r[l].updater(),r.splice(l,1))}a=s}}},659:n=>{var r={};n.exports=function(n,e){var t=function(n){if(void 0===r[n]){var e=document.querySelector(n);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(n){e=null}r[n]=e}return r[n]}(n);if(!t)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");t.appendChild(e)}},540:n=>{n.exports=function(n){var r=document.createElement("style");return n.setAttributes(r,n.attributes),n.insert(r,n.options),r}},56:(n,r,e)=>{n.exports=function(n){var r=e.nc;r&&n.setAttribute("nonce",r)}},825:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var r=n.insertStyleElement(n);return{update:function(e){!function(n,r,e){var t="";e.supports&&(t+="@supports (".concat(e.supports,") {")),e.media&&(t+="@media ".concat(e.media," {"));var o=void 0!==e.layer;o&&(t+="@layer".concat(e.layer.length>0?" ".concat(e.layer):""," {")),t+=e.css,o&&(t+="}"),e.media&&(t+="}"),e.supports&&(t+="}");var a=e.sourceMap;a&&"undefined"!=typeof btoa&&(t+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),r.styleTagTransform(t,n,r.options)}(r,n,e)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(r)}}}},113:n=>{n.exports=function(n,r){if(r.styleSheet)r.styleSheet.cssText=n;else{for(;r.firstChild;)r.removeChild(r.firstChild);r.appendChild(document.createTextNode(n))}}}},r={};function e(t){var o=r[t];if(void 0!==o)return o.exports;var a=r[t]={id:t,exports:{}};return n[t](a,a.exports,e),a.exports}e.n=n=>{var r=n&&n.__esModule?()=>n.default:()=>n;return e.d(r,{a:r}),r},e.d=(n,r)=>{for(var t in r)e.o(r,t)&&!e.o(n,t)&&Object.defineProperty(n,t,{enumerable:!0,get:r[t]})},e.o=(n,r)=>Object.prototype.hasOwnProperty.call(n,r),e.nc=void 0,(()=>{var n=e(72),r=e.n(n),t=e(825),o=e.n(t),a=e(659),i=e.n(a),A=e(56),s=e.n(A),c=e(540),l=e.n(c),p=e(113),u=e.n(p),d=e(208),b={};function g(){let n=Array(9).fill().map((()=>Array(9).fill(0)));return{board:n,placeShip:function(r,e,t,o){if(r>9||e>9||r<0||e<0)return!1;const a=function(n){let r=0,e=!1;return{length:n,hit:function(){if(r++,r===n)return e=!0,!0},isSunk:function(){return e}}}(t);if("vertical"===o){if(e+a.length>9)return!1}else if("horizontal"===o&&r+a.length>9)return!1;if(n[r][e]="ship","vertical"===o)for(let t=1;t<=a.length;t++)n[r+t][e]="ship";else if("horizontal"===o)for(let t=0;t<a.length;t++)n[r][e+t]="ship";return!0},receiveAttack:function(r,e){return"ship"===n[r][e]?(n[r][e]="hit","hit"):(n[r][e]="missed","missed")},allShipSunk:function(){let r=!0;for(let e=0;e<9;e++)n[e].includes("ship")&&(r=!1);return r}}}b.styleTagTransform=u(),b.setAttributes=s(),b.insert=i().bind(null,"head"),b.domAPI=o(),b.insertStyleElement=l(),r()(d.A,b),d.A&&d.A.locals&&d.A.locals;const B=function(){const n=document.documentElement,r=n.querySelector(".tt");return function(){"dark"===n.className?n.removeAttribute("class"):n.className="dark","☀️"==r.textContent?r.textContent="🌙":r.textContent="☀️"}}();document.querySelector(".tt").addEventListener("click",B);const f=document.querySelector("main");f.textContent="";const C=g();C.placeShip(5,5,3,"horizontal");const m=document.createElement("div");m.classList.add("board"),C.board.forEach(((n,r)=>{n.forEach(((n,e)=>{const t=document.createElement("div");t.setAttribute("x",r),t.setAttribute("y",e),t.textContent=n,t.addEventListener("click",(n=>{C.receiveAttack(n.target.attributes.x.value,n.target.attributes.y.value),console.log(C.board)})),m.appendChild(t)}))}));const h=g();h.placeShip(2,2,3,"vertical");const y=document.createElement("div");y.classList.add("board"),h.board.forEach(((n,r)=>{n.forEach(((n,e)=>{const t=document.createElement("div");t.setAttribute("x",r),t.setAttribute("y",e),t.textContent=n,t.addEventListener("click",(n=>{h.receiveAttack(n.target.attributes.x.value,n.target.attributes.y.value),console.log(h.board)})),y.appendChild(t)}))})),f.appendChild(m),f.appendChild(y)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,